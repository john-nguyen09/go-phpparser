([]*lexer.Token) (len=25) {
  (*lexer.Token)(OpenTag 0 6),
  (*lexer.Token)(Whitespace 6 5),
  (*lexer.Token)(DocumentComment 11 15),
  (*lexer.Token)(Whitespace 26 5),
  (*lexer.Token)(Function 31 8),
  (*lexer.Token)(Whitespace 39 1),
  (*lexer.Token)(Name 40 10),
  (*lexer.Token)(OpenParenthesis 50 1),
  (*lexer.Token)(Name 51 6),
  (*lexer.Token)(Whitespace 57 1),
  (*lexer.Token)(VariableName 58 7),
  (*lexer.Token)(Whitespace 65 1),
  (*lexer.Token)(Equals 66 1),
  (*lexer.Token)(Whitespace 67 1),
  (*lexer.Token)(StringLiteral 68 13),
  (*lexer.Token)(CloseParenthesis 81 1),
  (*lexer.Token)(Whitespace 82 1),
  (*lexer.Token)(Colon 83 1),
  (*lexer.Token)(Whitespace 84 1),
  (*lexer.Token)(Name 85 6),
  (*lexer.Token)(Whitespace 91 1),
  (*lexer.Token)(OpenBrace 92 1),
  (*lexer.Token)(Whitespace 93 1),
  (*lexer.Token)(CloseBrace 94 1),
  (*lexer.Token)(EndOfFile 95 0)
}
(*phrase.Phrase)({
  Type: (phrase.PhraseType) StatementList,
  Children: ([]phrase.AstNode) (len=5) {
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) InlineText,
      Children: ([]phrase.AstNode) (len=1) {
        (*lexer.Token)(OpenTag 0 6)
      }
    }),
    (*lexer.Token)(Whitespace 6 5),
    (*lexer.Token)(DocumentComment 11 15),
    (*lexer.Token)(Whitespace 26 5),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) FunctionDeclaration,
      Children: ([]phrase.AstNode) (len=3) {
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) FunctionDeclarationHeader,
          Children: ([]phrase.AstNode) (len=8) {
            (*lexer.Token)(Function 31 8),
            (*lexer.Token)(Whitespace 39 1),
            (*lexer.Token)(Name 40 10),
            (*lexer.Token)(OpenParenthesis 50 1),
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) ParameterDeclarationList,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) ParameterDeclaration,
                  Children: ([]phrase.AstNode) (len=7) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) TypeDeclaration,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) QualifiedName,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) NamespaceName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 51 6)
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 57 1),
                    (*lexer.Token)(VariableName 58 7),
                    (*lexer.Token)(Whitespace 65 1),
                    (*lexer.Token)(Equals 66 1),
                    (*lexer.Token)(Whitespace 67 1),
                    (*lexer.Token)(StringLiteral 68 13)
                  }
                })
              }
            }),
            (*lexer.Token)(CloseParenthesis 81 1),
            (*lexer.Token)(Whitespace 82 1),
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) ReturnType,
              Children: ([]phrase.AstNode) (len=3) {
                (*lexer.Token)(Colon 83 1),
                (*lexer.Token)(Whitespace 84 1),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) TypeDeclaration,
                  Children: ([]phrase.AstNode) (len=1) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) QualifiedName,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) NamespaceName,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 85 6)
                          }
                        })
                      }
                    })
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Whitespace 91 1),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) FunctionDeclarationBody,
          Children: ([]phrase.AstNode) (len=3) {
            (*lexer.Token)(OpenBrace 92 1),
            (*lexer.Token)(Whitespace 93 1),
            (*lexer.Token)(CloseBrace 94 1)
          }
        })
      }
    })
  }
})
