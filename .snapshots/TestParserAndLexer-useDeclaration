([]*lexer.Token) (len=12) {
  (*lexer.Token)(OpenTag 0 6),
  (*lexer.Token)(Use 6 3),
  (*lexer.Token)(Whitespace 9 1),
  (*lexer.Token)(Name 10 3),
  (*lexer.Token)(Backslash 13 1),
  (*lexer.Token)(Name 14 3),
  (*lexer.Token)(Whitespace 17 1),
  (*lexer.Token)(As 18 2),
  (*lexer.Token)(Whitespace 20 1),
  (*lexer.Token)(Name 21 3),
  (*lexer.Token)(Semicolon 24 1),
  (*lexer.Token)(EndOfFile 25 0)
}
(*phrase.Phrase)({
  Type: (phrase.PhraseType) StatementList,
  Children: ([]phrase.AstNode) (len=2) {
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) InlineText,
      Children: ([]phrase.AstNode) (len=1) {
        (*lexer.Token)(OpenTag 0 6)
      }
    }),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 6 3),
        (*lexer.Token)(Whitespace 9 1),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=3) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*lexer.Token)(Name 10 3),
                    (*lexer.Token)(Backslash 13 1),
                    (*lexer.Token)(Name 14 3)
                  }
                }),
                (*lexer.Token)(Whitespace 17 1),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceAliasingClause,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*lexer.Token)(As 18 2),
                    (*lexer.Token)(Whitespace 20 1),
                    (*lexer.Token)(Name 21 3)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 24 1)
      }
    })
  }
})
