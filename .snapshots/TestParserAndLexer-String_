([]struct { Type lexer.TokenType; Offset int; Length int }) (len=1197) {
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenTag,
    Offset: (int) 0,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Declare,
    Offset: (int) 6,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 13,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 14,
    Length: (int) 12
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 26,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 27,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 28,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 29,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 30,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Namespace,
    Offset: (int) 32,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 41,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 42,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 51,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 52,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 56,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 57,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 63,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 64,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 66,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 69,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 70,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 79,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 80,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 85,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 86,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 87,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 90,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 91,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 100,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 101,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 105,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 106,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 112,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 113,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Class,
    Offset: (int) 115,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 120,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 121,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 128,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Extends,
    Offset: (int) 129,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 136,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 137,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 143,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 144,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 145,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comment,
    Offset: (int) 150,
    Length: (int) 33
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 183,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Const,
    Offset: (int) 188,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 193,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 194,
    Length: (int) 18
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 212,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 213,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 214,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 215,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 216,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 217,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Const,
    Offset: (int) 222,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 227,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 228,
    Length: (int) 18
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 246,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 247,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 248,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 249,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 250,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 251,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Const,
    Offset: (int) 256,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 261,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 262,
    Length: (int) 12
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 274,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 275,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 276,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 277,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 278,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 279,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Const,
    Offset: (int) 284,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 289,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 290,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 301,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 302,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 303,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 304,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 305,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 306,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStart,
    Offset: (int) 312,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 315,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) AtVar,
    Offset: (int) 316,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 320,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 321,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 327,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 328,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 334,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 335,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 340,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEnd,
    Offset: (int) 341,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 343,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Public,
    Offset: (int) 348,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 354,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 355,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 361,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 362,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Protected,
    Offset: (int) 368,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 377,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Static,
    Offset: (int) 378,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 384,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 385,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 398,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 399,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 400,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 401,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 402,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 411,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 415,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) FatArrow,
    Offset: (int) 416,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 418,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 419,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 423,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 424,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 433,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 436,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) FatArrow,
    Offset: (int) 438,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 440,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 442,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 445,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 446,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 455,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 458,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) FatArrow,
    Offset: (int) 460,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 462,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 463,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 467,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 468,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 477,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 480,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) FatArrow,
    Offset: (int) 482,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 484,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 485,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 489,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 490,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 499,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 502,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) FatArrow,
    Offset: (int) 504,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 506,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 507,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 511,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 512,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 521,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 524,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) FatArrow,
    Offset: (int) 526,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 528,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 529,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 533,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 534,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 543,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 546,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) FatArrow,
    Offset: (int) 548,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 550,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 551,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 555,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 556,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 565,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 568,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) FatArrow,
    Offset: (int) 570,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 572,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 573,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 579,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 580,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 585,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 586,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 587,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStart,
    Offset: (int) 593,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 596,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 597,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 602,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 604,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 614,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 615,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 616,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 617,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 623,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 624,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 630,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 631,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentText,
    Offset: (int) 635,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 636,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 637,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 642,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) AtParam,
    Offset: (int) 651,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 657,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 658,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 664,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 665,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 671,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 677,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 682,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 683,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 685,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 686,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 689,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 690,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 696,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 697,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 702,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) AtParam,
    Offset: (int) 704,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 710,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 711,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 716,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 718,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 729,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 730,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 740,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 741,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 751,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 752,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEnd,
    Offset: (int) 757,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 759,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Public,
    Offset: (int) 764,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 770,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Function,
    Offset: (int) 771,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 779,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 780,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 791,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 792,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 798,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 799,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 805,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 806,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Array,
    Offset: (int) 807,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 812,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 813,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 824,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 825,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 826,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 827,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 828,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 829,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 830,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 831,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 832,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 841,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 846,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 848,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 858,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 859,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 860,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 861,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 872,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 873,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 882,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 887,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 889,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 894,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 895,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 896,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 897,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 903,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 904,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 909,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 910,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Public,
    Offset: (int) 916,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 922,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Function,
    Offset: (int) 923,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 931,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 932,
    Length: (int) 15
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 947,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 948,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 949,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Colon,
    Offset: (int) 950,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 951,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Array,
    Offset: (int) 952,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 957,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 958,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 959,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 968,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 974,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 975,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 976,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 983,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 984,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 985,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 990,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 991,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStart,
    Offset: (int) 997,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 1000,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1001,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 1006,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentTagName,
    Offset: (int) 1008,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 1017,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1018,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 1023,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1032,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1038,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1039,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1040,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1041,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1047,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1048,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentText,
    Offset: (int) 1053,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 1054,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1055,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 1060,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) AtParam,
    Offset: (int) 1069,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1075,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1076,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1082,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1083,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1087,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1088,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1094,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1095,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1100,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1101,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 1108,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1109,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 1114,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) AtParam,
    Offset: (int) 1116,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1122,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1123,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1127,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1128,
    Length: (int) 19
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1147,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1148,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1155,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1156,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1158,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1159,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1164,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1165,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1168,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 1169,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1170,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 1171,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1172,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1173,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1174,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 1181,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1182,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 1187,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) AtReturn,
    Offset: (int) 1196,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1203,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1204,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1210,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1211,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1214,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1215,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1221,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1222,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 1228,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1229,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEnd,
    Offset: (int) 1234,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1236,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Public,
    Offset: (int) 1241,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1247,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Static,
    Offset: (int) 1248,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1254,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Function,
    Offset: (int) 1255,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1263,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1264,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1269,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1270,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1276,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1277,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1281,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1282,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1283,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1287,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1288,
    Length: (int) 19
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1307,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 1308,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1309,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1310,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1314,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1315,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Colon,
    Offset: (int) 1316,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1317,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1318,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1324,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 1325,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1326,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1335,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1343,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 1344,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1345,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 1346,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 1347,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1348,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) If,
    Offset: (int) 1357,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1359,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1360,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1361,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1364,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) EqualsEqualsEquals,
    Offset: (int) 1365,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1368,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1369,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 1373,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 1374,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 1375,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1376,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) BarBar,
    Offset: (int) 1377,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1379,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1380,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1383,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) EqualsEqualsEquals,
    Offset: (int) 1384,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1387,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1388,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 1392,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 1393,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 1394,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1395,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1396,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 1397,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1398,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1411,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1419,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 1420,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1421,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 1422,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 1423,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1424,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 1433,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1434,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) If,
    Offset: (int) 1444,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1446,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1447,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1448,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1452,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) EqualsEqualsEquals,
    Offset: (int) 1453,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1456,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1457,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 1461,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1462,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 1470,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1471,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1472,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 1473,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1474,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 1487,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1493,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1494,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1505,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1506,
    Length: (int) 17
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 1523,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1524,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1530,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1531,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1532,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 1538,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1539,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1540,
    Length: (int) 17
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 1557,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1558,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1562,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1563,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1564,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 1568,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1569,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1570,
    Length: (int) 17
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1587,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1593,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1594,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1598,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1599,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1600,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1608,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Plus,
    Offset: (int) 1609,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1610,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 1611,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1612,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1613,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Minus,
    Offset: (int) 1614,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 1615,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1616,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1617,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1630,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 1631,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1632,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 1641,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1642,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Else,
    Offset: (int) 1643,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1647,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 1648,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1649,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 1662,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1668,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1669,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 1673,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1675,
    Length: (int) 20
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1695,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1696,
    Length: (int) 17
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1713,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1719,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1720,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1724,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1725,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1726,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1734,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Plus,
    Offset: (int) 1735,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1736,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 1737,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1738,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1739,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Minus,
    Offset: (int) 1740,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 1741,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1742,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1743,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1744,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1745,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1748,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1749,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1750,
    Length: (int) 19
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1769,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1782,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 1783,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1784,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 1793,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1794,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 1799,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1800,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStart,
    Offset: (int) 1806,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 1809,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1810,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 1815,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentTagName,
    Offset: (int) 1817,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 1826,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1827,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 1832,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1841,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1847,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1848,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1854,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1855,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1864,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1865,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1867,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1868,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1875,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1876,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1877,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1880,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1881,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1887,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1888,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1893,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1894,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1899,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1900,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1904,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1905,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1911,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1912,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1918,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentText,
    Offset: (int) 1919,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 1920,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1921,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 1926,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) AtParam,
    Offset: (int) 1935,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1941,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1942,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1948,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1954,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1958,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1961,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1967,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1968,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1975,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1976,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 1982,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1983,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 1988,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) AtParam,
    Offset: (int) 1990,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1996,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1997,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Bar,
    Offset: (int) 2001,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2002,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2008,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2009,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2015,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2016,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2021,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2022,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 2026,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2027,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 2032,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) AtParam,
    Offset: (int) 2034,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2040,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2041,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2045,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2046,
    Length: (int) 19
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2065,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2066,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2073,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2074,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2076,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2077,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2082,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2083,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2086,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 2087,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2088,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 2089,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2090,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2091,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2092,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 2099,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2100,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 2105,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) AtReturn,
    Offset: (int) 2114,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2121,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2122,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2128,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2129,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2135,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2136,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2140,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2141,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2147,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2148,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2157,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2158,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 2164,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2165,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEnd,
    Offset: (int) 2170,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2172,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Public,
    Offset: (int) 2177,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2183,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Static,
    Offset: (int) 2184,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2190,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Function,
    Offset: (int) 2191,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2199,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2200,
    Length: (int) 20
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2220,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2221,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2227,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2228,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2232,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2233,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2234,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2240,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2241,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2242,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2246,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2247,
    Length: (int) 19
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2266,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 2267,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2268,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2269,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2273,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2274,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Colon,
    Offset: (int) 2275,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2276,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2277,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2283,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 2284,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2285,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) If,
    Offset: (int) 2294,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2296,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2297,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2298,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2302,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ExclamationEqualsEquals,
    Offset: (int) 2303,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2306,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2307,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2313,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2314,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 2315,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2316,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2329,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2333,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 2334,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2335,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2336,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2347,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2348,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2352,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2353,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2354,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2355,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2361,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2362,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2363,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2369,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2370,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2371,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2375,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2376,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2377,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 2386,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2387,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2397,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2403,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 2404,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2405,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2406,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2408,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2409,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) If,
    Offset: (int) 2418,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2420,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2421,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2422,
    Length: (int) 19
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2441,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2442,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 2443,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2444,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2457,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2463,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 2464,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2465,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2466,
    Length: (int) 22
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2488,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2489,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 2498,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2499,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 2509,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2515,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2516,
    Length: (int) 21
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2537,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2538,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2551,
    Length: (int) 53
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2604,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2605,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2606,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2607,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2613,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2614,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2615,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2616,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2620,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2621,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Function,
    Offset: (int) 2634,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2642,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2643,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2651,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2652,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 2653,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2654,
    Length: (int) 17
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2671,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2675,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 2676,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2677,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2678,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 2686,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 2687,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 2688,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2689,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2690,
    Length: (int) 18
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) If,
    Offset: (int) 2708,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2710,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2711,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Isset,
    Offset: (int) 2712,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2717,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2718,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 2722,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2724,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 2737,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2738,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 2742,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2743,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2744,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2745,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 2746,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2747,
    Length: (int) 21
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 2768,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2774,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2775,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 2779,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2781,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 2794,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2795,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 2799,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2800,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2801,
    Length: (int) 17
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 2818,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2819,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ElseIf,
    Offset: (int) 2820,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2826,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2827,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2828,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2831,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) EqualsEqualsEquals,
    Offset: (int) 2832,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2835,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2836,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 2840,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 2841,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 2842,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2843,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) BarBar,
    Offset: (int) 2844,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2846,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2847,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2850,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) EqualsEqualsEquals,
    Offset: (int) 2851,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2854,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2855,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 2859,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 2860,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 2861,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2862,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2863,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 2864,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2865,
    Length: (int) 21
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 2886,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2892,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2893,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2896,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2897,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2903,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2904,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2908,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2909,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2910,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2911,
    Length: (int) 17
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 2928,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2929,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ElseIf,
    Offset: (int) 2930,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2936,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2937,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2938,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2941,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) EqualsEqualsEquals,
    Offset: (int) 2942,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2945,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2946,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 2950,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 2951,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 2952,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2953,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2954,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 2955,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2956,
    Length: (int) 21
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 2977,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2983,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2984,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 2988,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2990,
    Length: (int) 15
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3005,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3006,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3012,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3013,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 3021,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3022,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 3023,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3024,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3025,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 3026,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3027,
    Length: (int) 17
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 3044,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3045,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Else,
    Offset: (int) 3046,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3050,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 3051,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3052,
    Length: (int) 21
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 3073,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3079,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3080,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3083,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3084,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3090,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3091,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3095,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3096,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 3097,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3098,
    Length: (int) 17
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 3115,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3116,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 3129,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 3130,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3131,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3144,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3148,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3157,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 3158,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3159,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 3164,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3165,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStart,
    Offset: (int) 3171,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 3174,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3175,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 3180,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3182,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3190,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3191,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3192,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3193,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3200,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3201,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3205,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3206,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3211,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3212,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3214,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3215,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3218,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3219,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentText,
    Offset: (int) 3222,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3224,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3225,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3232,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3233,
    Length: (int) 14
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentText,
    Offset: (int) 3247,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 3248,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3249,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 3254,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) AtParam,
    Offset: (int) 3263,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3269,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3270,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3273,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3274,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3278,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3279,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3283,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3284,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 3289,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3290,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentStartline,
    Offset: (int) 3295,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) AtReturn,
    Offset: (int) 3304,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3311,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3312,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3318,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3319,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentText,
    Offset: (int) 3322,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3324,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3325,
    Length: (int) 14
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3339,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3340,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3342,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3343,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3347,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3348,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEndline,
    Offset: (int) 3353,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3354,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DocumentCommentEnd,
    Offset: (int) 3359,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3361,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Private,
    Offset: (int) 3366,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3373,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Static,
    Offset: (int) 3374,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3380,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Function,
    Offset: (int) 3381,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3389,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3390,
    Length: (int) 15
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3405,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3406,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3409,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3410,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3414,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3415,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Colon,
    Offset: (int) 3416,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3417,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3418,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3424,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 3425,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3426,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) If,
    Offset: (int) 3435,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3437,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3438,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3439,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3443,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) LessThanEquals,
    Offset: (int) 3444,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3446,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3447,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3451,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3452,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 3453,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3454,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 3467,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3473,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3474,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3477,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3478,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3482,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 3483,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3484,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 3493,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3494,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) If,
    Offset: (int) 3503,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3505,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3506,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3507,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3511,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) LessThanEquals,
    Offset: (int) 3512,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3514,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3515,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3520,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3521,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 3522,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3523,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 3536,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3542,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3543,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3546,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3547,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3548,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) GreaterThanGreaterThan,
    Offset: (int) 3552,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3554,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3555,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3556,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Plus,
    Offset: (int) 3557,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3558,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3559,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3563,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3564,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 3565,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3566,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3567,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3570,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3571,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3572,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Ampersand,
    Offset: (int) 3576,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3577,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3581,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3582,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Plus,
    Offset: (int) 3583,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3584,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3585,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3589,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 3590,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3591,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 3600,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3601,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) If,
    Offset: (int) 3610,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3612,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3613,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3614,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3618,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) LessThanEquals,
    Offset: (int) 3619,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3621,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3622,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3628,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3629,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 3630,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3631,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 3644,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3650,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3651,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3654,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3655,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3656,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) GreaterThanGreaterThan,
    Offset: (int) 3660,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3662,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3664,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3665,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Plus,
    Offset: (int) 3666,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3667,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3668,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3672,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3673,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 3674,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3675,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3676,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3679,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3680,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3681,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3682,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) GreaterThanGreaterThan,
    Offset: (int) 3686,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3688,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3689,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Ampersand,
    Offset: (int) 3690,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3691,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3695,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3696,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Plus,
    Offset: (int) 3697,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3698,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3699,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3703,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3704,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 3705,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3706,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3707,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3710,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3711,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3712,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Ampersand,
    Offset: (int) 3716,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3717,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3721,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3722,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Plus,
    Offset: (int) 3723,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3724,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3725,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3729,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 3730,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3731,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 3740,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3741,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) If,
    Offset: (int) 3750,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3752,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3753,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3754,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3758,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) LessThanEquals,
    Offset: (int) 3759,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3761,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3762,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3770,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3771,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 3772,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3773,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 3786,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3792,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3793,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3796,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3797,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3798,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) GreaterThanGreaterThan,
    Offset: (int) 3802,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3804,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3806,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3807,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Plus,
    Offset: (int) 3808,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3809,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3810,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3814,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3815,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 3816,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3817,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3818,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3821,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3822,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3823,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3824,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) GreaterThanGreaterThan,
    Offset: (int) 3828,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3830,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3832,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Ampersand,
    Offset: (int) 3833,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3834,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3838,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3839,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Plus,
    Offset: (int) 3840,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3841,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3842,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3846,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3847,
    Length: (int) 18
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 3865,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3866,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3867,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3870,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3871,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3872,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3873,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) GreaterThanGreaterThan,
    Offset: (int) 3877,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3879,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3880,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Ampersand,
    Offset: (int) 3881,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3882,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3886,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3887,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Plus,
    Offset: (int) 3888,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3889,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3890,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3894,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3895,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 3896,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3897,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3898,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3901,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3902,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 3903,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Ampersand,
    Offset: (int) 3907,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3908,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3912,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3913,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Plus,
    Offset: (int) 3914,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3915,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) IntegerLiteral,
    Offset: (int) 3916,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 3920,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 3921,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3922,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 3931,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3932,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Throw,
    Offset: (int) 3941,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3946,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) New,
    Offset: (int) 3947,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 3950,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 3951,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 3956,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 3957,
    Length: (int) 62
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 4019,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 4020,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 4021,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 4026,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 4027,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Public,
    Offset: (int) 4037,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 4043,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Function,
    Offset: (int) 4044,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 4052,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 4053,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 4060,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 4061,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 4062,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Colon,
    Offset: (int) 4063,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 4064,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 4065,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 4071,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 4072,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 4073,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 4082,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 4088,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 4089,
    Length: (int) 15
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 4104,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 4105,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 4110,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 4111,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 4112,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 4113,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) EndOfFile,
    Offset: (int) 4114,
    Length: (int) 0
  }
}
(*phrase.Phrase)({
  Type: (phrase.PhraseType) StatementList,
  Children: ([]phrase.AstNode) (len=11) {
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) InlineText,
      Children: ([]phrase.AstNode) (len=1) {
        (*lexer.Token)(OpenTag 0 6 ModeInitial)
      }
    }),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) DeclareStatement,
      Children: ([]phrase.AstNode) (len=5) {
        (*lexer.Token)(Declare 6 7 ModeScripting),
        (*lexer.Token)(OpenParenthesis 13 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) DeclareDirective,
          Children: ([]phrase.AstNode) (len=3) {
            (*lexer.Token)(Name 14 12 ModeScripting),
            (*lexer.Token)(Equals 26 1 ModeScripting),
            (*lexer.Token)(IntegerLiteral 27 1 ModeScripting)
          }
        }),
        (*lexer.Token)(CloseParenthesis 28 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NullStatement,
          Children: ([]phrase.AstNode) (len=1) {
            (*lexer.Token)(Semicolon 29 1 ModeScripting)
          }
        })
      }
    }),
    (*lexer.Token)(Whitespace 30 2 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceDefinition,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Namespace 32 9 ModeScripting),
        (*lexer.Token)(Whitespace 41 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceName,
          Children: ([]phrase.AstNode) (len=5) {
            (*lexer.Token)(Name 42 9 ModeScripting),
            (*lexer.Token)(Backslash 51 1 ModeScripting),
            (*lexer.Token)(Name 52 4 ModeScripting),
            (*lexer.Token)(Backslash 56 1 ModeScripting),
            (*lexer.Token)(Name 57 6 ModeScripting)
          }
        }),
        (*lexer.Token)(Semicolon 63 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 64 2 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 66 3 ModeScripting),
        (*lexer.Token)(Whitespace 69 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*lexer.Token)(Name 70 9 ModeScripting),
                    (*lexer.Token)(Backslash 79 1 ModeScripting),
                    (*lexer.Token)(Name 80 5 ModeScripting)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 85 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 86 1 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 87 3 ModeScripting),
        (*lexer.Token)(Whitespace 90 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=5) {
                    (*lexer.Token)(Name 91 9 ModeScripting),
                    (*lexer.Token)(Backslash 100 1 ModeScripting),
                    (*lexer.Token)(Name 101 4 ModeScripting),
                    (*lexer.Token)(Backslash 105 1 ModeScripting),
                    (*lexer.Token)(Name 106 6 ModeScripting)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 112 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 113 2 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) ClassDeclaration,
      Children: ([]phrase.AstNode) (len=3) {
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) ClassDeclarationHeader,
          Children: ([]phrase.AstNode) (len=5) {
            (*lexer.Token)(Class 115 5 ModeScripting),
            (*lexer.Token)(Whitespace 120 1 ModeScripting),
            (*lexer.Token)(Name 121 7 ModeScripting),
            (*lexer.Token)(Whitespace 128 1 ModeScripting),
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) ClassBaseClause,
              Children: ([]phrase.AstNode) (len=3) {
                (*lexer.Token)(Extends 129 7 ModeScripting),
                (*lexer.Token)(Whitespace 136 1 ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) QualifiedName,
                  Children: ([]phrase.AstNode) (len=1) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) NamespaceName,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*lexer.Token)(Name 137 6 ModeScripting)
                      }
                    })
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Whitespace 143 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) ClassDeclarationBody,
          Children: ([]phrase.AstNode) (len=7) {
            (*lexer.Token)(OpenBrace 144 1 ModeScripting),
            (*lexer.Token)(Whitespace 145 5 ModeScripting ModeScripting),
            (*lexer.Token)(Comment 150 33 ModeScripting ModeScripting),
            (*lexer.Token)(Whitespace 183 5 ModeScripting ModeScripting),
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) ClassMemberDeclarationList,
              Children: ([]phrase.AstNode) (len=33) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) ClassConstDeclaration,
                  Children: ([]phrase.AstNode) (len=4) {
                    (*lexer.Token)(Const 188 5 ModeScripting ModeScripting),
                    (*lexer.Token)(Whitespace 193 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) ClassConstElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ClassConstElement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) Identifier,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 194 18 ModeScripting ModeScripting)
                              }
                            }),
                            (*lexer.Token)(Whitespace 212 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Equals 213 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 214 1 ModeScripting ModeScripting),
                            (*lexer.Token)(IntegerLiteral 215 1 ModeScripting ModeScripting)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 216 1 ModeScripting ModeScripting)
                  }
                }),
                (*lexer.Token)(Whitespace 217 5 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) ClassConstDeclaration,
                  Children: ([]phrase.AstNode) (len=4) {
                    (*lexer.Token)(Const 222 5 ModeScripting ModeScripting),
                    (*lexer.Token)(Whitespace 227 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) ClassConstElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ClassConstElement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) Identifier,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 228 18 ModeScripting ModeScripting)
                              }
                            }),
                            (*lexer.Token)(Whitespace 246 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Equals 247 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 248 1 ModeScripting ModeScripting),
                            (*lexer.Token)(IntegerLiteral 249 1 ModeScripting ModeScripting)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 250 1 ModeScripting ModeScripting)
                  }
                }),
                (*lexer.Token)(Whitespace 251 5 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) ClassConstDeclaration,
                  Children: ([]phrase.AstNode) (len=4) {
                    (*lexer.Token)(Const 256 5 ModeScripting ModeScripting),
                    (*lexer.Token)(Whitespace 261 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) ClassConstElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ClassConstElement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) Identifier,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 262 12 ModeScripting ModeScripting)
                              }
                            }),
                            (*lexer.Token)(Whitespace 274 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Equals 275 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 276 1 ModeScripting ModeScripting),
                            (*lexer.Token)(IntegerLiteral 277 1 ModeScripting ModeScripting)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 278 1 ModeScripting ModeScripting)
                  }
                }),
                (*lexer.Token)(Whitespace 279 5 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) ClassConstDeclaration,
                  Children: ([]phrase.AstNode) (len=4) {
                    (*lexer.Token)(Const 284 5 ModeScripting ModeScripting),
                    (*lexer.Token)(Whitespace 289 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) ClassConstElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ClassConstElement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) Identifier,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 290 11 ModeScripting ModeScripting)
                              }
                            }),
                            (*lexer.Token)(Whitespace 301 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Equals 302 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 303 1 ModeScripting ModeScripting),
                            (*lexer.Token)(IntegerLiteral 304 1 ModeScripting ModeScripting)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 305 1 ModeScripting ModeScripting)
                  }
                }),
                (*lexer.Token)(Whitespace 306 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) DocumentComment,
                  Children: ([]phrase.AstNode) (len=5) {
                    (*lexer.Token)(DocumentCommentStart 312 3 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(Whitespace 315 1 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentTag,
                      Children: ([]phrase.AstNode) (len=5) {
                        (*lexer.Token)(AtVar 316 4 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 320 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 321 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 327 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Name 328 6 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 334 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 335 5 ModeScripting ModeScripting ModeDocumentBlock)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 340 1 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(DocumentCommentEnd 341 2 ModeScripting ModeScripting ModeDocumentBlock)
                  }
                }),
                (*lexer.Token)(Whitespace 343 5 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) PropertyDeclaration,
                  Children: ([]phrase.AstNode) (len=4) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MemberModifierList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*lexer.Token)(Public 348 6 ModeScripting ModeScripting)
                      }
                    }),
                    (*lexer.Token)(Whitespace 354 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) PropertyElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) PropertyElement,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(VariableName 355 6 ModeScripting ModeScripting)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 361 1 ModeScripting ModeScripting)
                  }
                }),
                (*lexer.Token)(Whitespace 362 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) PropertyDeclaration,
                  Children: ([]phrase.AstNode) (len=4) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MemberModifierList,
                      Children: ([]phrase.AstNode) (len=3) {
                        (*lexer.Token)(Protected 368 9 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 377 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Static 378 6 ModeScripting ModeScripting)
                      }
                    }),
                    (*lexer.Token)(Whitespace 384 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) PropertyElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) PropertyElement,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(VariableName 385 13 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 398 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) PropertyInitialiser,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*lexer.Token)(Equals 399 1 ModeScripting ModeScripting),
                                (*lexer.Token)(Whitespace 400 1 ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ArrayCreationExpression,
                                  Children: ([]phrase.AstNode) (len=5) {
                                    (*lexer.Token)(OpenBracket 401 1 ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 402 9 ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) ArrayInitialiserList,
                                      Children: ([]phrase.AstNode) (len=23) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArrayElement,
                                          Children: ([]phrase.AstNode) (len=5) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayKey,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 411 4 ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(Whitespace 415 1 ModeScripting ModeScripting),
                                            (*lexer.Token)(FatArrow 416 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 418 1 ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayValue,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 419 4 ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Comma 423 1 ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 424 9 ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArrayElement,
                                          Children: ([]phrase.AstNode) (len=5) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayKey,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 433 3 ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(Whitespace 436 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(FatArrow 438 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 440 2 ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayValue,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 442 3 ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Comma 445 1 ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 446 9 ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArrayElement,
                                          Children: ([]phrase.AstNode) (len=5) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayKey,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 455 3 ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(Whitespace 458 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(FatArrow 460 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 462 1 ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayValue,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 463 4 ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Comma 467 1 ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 468 9 ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArrayElement,
                                          Children: ([]phrase.AstNode) (len=5) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayKey,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 477 3 ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(Whitespace 480 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(FatArrow 482 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 484 1 ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayValue,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 485 4 ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Comma 489 1 ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 490 9 ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArrayElement,
                                          Children: ([]phrase.AstNode) (len=5) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayKey,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 499 3 ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(Whitespace 502 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(FatArrow 504 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 506 1 ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayValue,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 507 4 ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Comma 511 1 ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 512 9 ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArrayElement,
                                          Children: ([]phrase.AstNode) (len=5) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayKey,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 521 3 ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(Whitespace 524 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(FatArrow 526 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 528 1 ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayValue,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 529 4 ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Comma 533 1 ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 534 9 ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArrayElement,
                                          Children: ([]phrase.AstNode) (len=5) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayKey,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 543 3 ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(Whitespace 546 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(FatArrow 548 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 550 1 ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayValue,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 551 4 ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Comma 555 1 ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 556 9 ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArrayElement,
                                          Children: ([]phrase.AstNode) (len=5) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayKey,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 565 3 ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(Whitespace 568 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(FatArrow 570 2 ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 572 1 ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayValue,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(StringLiteral 573 6 ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Comma 579 1 ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(Whitespace 580 5 ModeScripting ModeScripting),
                                    (*lexer.Token)(CloseBracket 585 1 ModeScripting ModeScripting)
                                  }
                                })
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 586 1 ModeScripting ModeScripting)
                  }
                }),
                (*lexer.Token)(Whitespace 587 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) DocumentComment,
                  Children: ([]phrase.AstNode) (len=10) {
                    (*lexer.Token)(DocumentCommentStart 593 3 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(DocumentCommentEndline 596 1 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(Whitespace 597 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentDescription,
                      Children: ([]phrase.AstNode) (len=12) {
                        (*lexer.Token)(DocumentCommentStartline 602 2 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 604 10 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 614 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 615 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 616 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 617 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 623 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 624 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 630 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 631 4 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(DocumentCommentText 635 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(DocumentCommentEndline 636 1 ModeScripting ModeScripting ModeDocumentBlock)
                      }
                    }),
                    (*lexer.Token)(Whitespace 637 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentParamTag,
                      Children: ([]phrase.AstNode) (len=8) {
                        (*lexer.Token)(DocumentCommentStartline 642 9 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(AtParam 651 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 657 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) TypeDeclaration,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) QualifiedName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) NamespaceName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*lexer.Token)(Name 658 6 ModeScripting ModeScripting ModeDocumentBlock)
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(Whitespace 664 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(VariableName 665 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 671 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) (len=8) {
                            (*lexer.Token)(Name 677 5 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 682 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 683 2 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 685 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 686 3 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 689 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 690 6 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(DocumentCommentEndline 696 1 ModeScripting ModeScripting ModeDocumentBlock)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 697 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentParamTag,
                      Children: ([]phrase.AstNode) (len=8) {
                        (*lexer.Token)(DocumentCommentStartline 702 2 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(AtParam 704 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 710 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) TypeDeclaration,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) QualifiedName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) NamespaceName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*lexer.Token)(Name 711 5 ModeScripting ModeScripting ModeDocumentBlock)
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(Whitespace 716 2 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(VariableName 718 11 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 729 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) (len=4) {
                            (*lexer.Token)(Name 730 10 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 740 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 741 10 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(DocumentCommentEndline 751 1 ModeScripting ModeScripting ModeDocumentBlock)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 752 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(DocumentCommentEnd 757 2 ModeScripting ModeScripting ModeDocumentBlock)
                  }
                }),
                (*lexer.Token)(Whitespace 759 5 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) MethodDeclaration,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationHeader,
                      Children: ([]phrase.AstNode) (len=8) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) MemberModifierList,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Public 764 6 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(Whitespace 770 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Function 771 8 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 779 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) Identifier,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 780 11 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(OpenParenthesis 791 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ParameterDeclarationList,
                          Children: ([]phrase.AstNode) (len=4) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) TypeDeclaration,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 792 6 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 798 1 ModeScripting ModeScripting),
                                (*lexer.Token)(VariableName 799 6 ModeScripting ModeScripting)
                              }
                            }),
                            (*lexer.Token)(Comma 805 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 806 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=7) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) TypeDeclaration,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*lexer.Token)(Array 807 5 ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 812 1 ModeScripting ModeScripting),
                                (*lexer.Token)(VariableName 813 11 ModeScripting ModeScripting),
                                (*lexer.Token)(Whitespace 824 1 ModeScripting ModeScripting),
                                (*lexer.Token)(Equals 825 1 ModeScripting ModeScripting),
                                (*lexer.Token)(Whitespace 826 1 ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ArrayCreationExpression,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*lexer.Token)(OpenBracket 827 1 ModeScripting ModeScripting),
                                    (*lexer.Token)(CloseBracket 828 1 ModeScripting ModeScripting)
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(CloseParenthesis 829 1 ModeScripting ModeScripting)
                      }
                    }),
                    (*lexer.Token)(Whitespace 830 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationBody,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) CompoundStatement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*lexer.Token)(OpenBrace 831 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 832 9 ModeScripting ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) StatementList,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) SimpleAssignmentExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) PropertyAccessExpression,
                                          Children: ([]phrase.AstNode) (len=3) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) SimpleVariable,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(VariableName 841 5 ModeScripting ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(Arrow 846 2 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) MemberName,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(Name 848 10 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 858 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Equals 859 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 860 1 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 861 11 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 872 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 873 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) SimpleAssignmentExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) PropertyAccessExpression,
                                          Children: ([]phrase.AstNode) (len=3) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) SimpleVariable,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(VariableName 882 5 ModeScripting ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(Arrow 887 2 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) MemberName,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(Name 889 5 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 894 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Equals 895 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 896 1 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 897 6 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 903 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Whitespace 904 5 ModeScripting ModeScripting ModeScripting),
                            (*lexer.Token)(CloseBrace 909 1 ModeScripting ModeScripting ModeScripting)
                          }
                        })
                      }
                    })
                  }
                }),
                (*lexer.Token)(Whitespace 910 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) MethodDeclaration,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationHeader,
                      Children: ([]phrase.AstNode) (len=9) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) MemberModifierList,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Public 916 6 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(Whitespace 922 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Function 923 8 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 931 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) Identifier,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 932 15 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(OpenParenthesis 947 1 ModeScripting ModeScripting),
                        (*lexer.Token)(CloseParenthesis 948 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 949 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ReturnType,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Colon 950 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 951 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) TypeDeclaration,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Array 952 5 ModeScripting ModeScripting)
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 957 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationBody,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) CompoundStatement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*lexer.Token)(OpenBrace 958 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 959 9 ModeScripting ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) StatementList,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ReturnStatement,
                                  Children: ([]phrase.AstNode) (len=4) {
                                    (*lexer.Token)(Return 968 6 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 974 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) ArrayCreationExpression,
                                      Children: ([]phrase.AstNode) (len=3) {
                                        (*lexer.Token)(OpenBracket 975 1 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArrayInitialiserList,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ArrayElement,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ArrayValue,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*lexer.Token)(StringLiteral 976 7 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                })
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(CloseBracket 983 1 ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 984 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Whitespace 985 5 ModeScripting ModeScripting ModeScripting),
                            (*lexer.Token)(CloseBrace 990 1 ModeScripting ModeScripting ModeScripting)
                          }
                        })
                      }
                    })
                  }
                }),
                (*lexer.Token)(Whitespace 991 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) DocumentComment,
                  Children: ([]phrase.AstNode) (len=15) {
                    (*lexer.Token)(DocumentCommentStart 997 3 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(DocumentCommentEndline 1000 1 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(Whitespace 1001 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentTag,
                      Children: ([]phrase.AstNode) (len=3) {
                        (*lexer.Token)(DocumentCommentStartline 1006 2 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(DocumentCommentTagName 1008 9 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) {
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(DocumentCommentEndline 1017 1 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(Whitespace 1018 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentDescription,
                      Children: ([]phrase.AstNode) (len=10) {
                        (*lexer.Token)(DocumentCommentStartline 1023 9 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1032 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1038 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1039 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1040 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1041 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1047 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1048 5 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(DocumentCommentText 1053 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(DocumentCommentEndline 1054 1 ModeScripting ModeScripting ModeDocumentBlock)
                      }
                    }),
                    (*lexer.Token)(Whitespace 1055 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentParamTag,
                      Children: ([]phrase.AstNode) (len=8) {
                        (*lexer.Token)(DocumentCommentStartline 1060 9 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(AtParam 1069 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1075 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) TypeDeclaration,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) QualifiedName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) NamespaceName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*lexer.Token)(Name 1076 6 ModeScripting ModeScripting ModeDocumentBlock)
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(Whitespace 1082 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(VariableName 1083 4 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1087 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) (len=6) {
                            (*lexer.Token)(Name 1088 6 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 1094 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 1095 5 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 1100 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 1101 7 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(DocumentCommentEndline 1108 1 ModeScripting ModeScripting ModeDocumentBlock)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 1109 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentParamTag,
                      Children: ([]phrase.AstNode) (len=8) {
                        (*lexer.Token)(DocumentCommentStartline 1114 2 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(AtParam 1116 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1122 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) TypeDeclaration,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) QualifiedName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) NamespaceName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*lexer.Token)(Name 1123 4 ModeScripting ModeScripting ModeDocumentBlock)
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(Whitespace 1127 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(VariableName 1128 19 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1147 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) (len=15) {
                            (*lexer.Token)(Name 1148 7 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 1155 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 1156 2 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 1158 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 1159 5 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 1164 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 1165 3 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 1168 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(IntegerLiteral 1169 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 1170 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Backslash 1171 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 1172 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 1173 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 1174 7 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(DocumentCommentEndline 1181 1 ModeScripting ModeScripting ModeDocumentBlock)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 1182 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentReturnTag,
                      Children: ([]phrase.AstNode) (len=6) {
                        (*lexer.Token)(DocumentCommentStartline 1187 9 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(AtReturn 1196 7 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1203 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) TypeDeclaration,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) QualifiedName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) NamespaceName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*lexer.Token)(Name 1204 6 ModeScripting ModeScripting ModeDocumentBlock)
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(Whitespace 1210 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) (len=6) {
                            (*lexer.Token)(Name 1211 3 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 1214 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 1215 6 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 1221 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 1222 6 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(DocumentCommentEndline 1228 1 ModeScripting ModeScripting ModeDocumentBlock)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 1229 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(DocumentCommentEnd 1234 2 ModeScripting ModeScripting ModeDocumentBlock)
                  }
                }),
                (*lexer.Token)(Whitespace 1236 5 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) MethodDeclaration,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationHeader,
                      Children: ([]phrase.AstNode) (len=10) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) MemberModifierList,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Public 1241 6 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 1247 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Static 1248 6 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(Whitespace 1254 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Function 1255 8 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 1263 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) Identifier,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 1264 5 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(OpenParenthesis 1269 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ParameterDeclarationList,
                          Children: ([]phrase.AstNode) (len=4) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) TypeDeclaration,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 1270 6 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 1276 1 ModeScripting ModeScripting),
                                (*lexer.Token)(VariableName 1277 4 ModeScripting ModeScripting)
                              }
                            }),
                            (*lexer.Token)(Comma 1281 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 1282 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=7) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) TypeDeclaration,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 1283 4 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 1287 1 ModeScripting ModeScripting),
                                (*lexer.Token)(VariableName 1288 19 ModeScripting ModeScripting),
                                (*lexer.Token)(Whitespace 1307 1 ModeScripting ModeScripting),
                                (*lexer.Token)(Equals 1308 1 ModeScripting ModeScripting),
                                (*lexer.Token)(Whitespace 1309 1 ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ConstantAccessExpression,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 1310 4 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(CloseParenthesis 1314 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 1315 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ReturnType,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Colon 1316 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 1317 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) TypeDeclaration,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) QualifiedName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) NamespaceName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*lexer.Token)(Name 1318 6 ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                })
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 1324 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationBody,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) CompoundStatement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*lexer.Token)(OpenBrace 1325 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 1326 9 ModeScripting ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) StatementList,
                              Children: ([]phrase.AstNode) (len=5) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) SimpleAssignmentExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 1335 8 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 1343 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Equals 1344 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 1345 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(IntegerLiteral 1346 1 ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 1347 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 1348 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) IfStatement,
                                  Children: ([]phrase.AstNode) (len=7) {
                                    (*lexer.Token)(If 1357 2 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 1359 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(OpenParenthesis 1360 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) LogicalExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) EqualityExpression,
                                          Children: ([]phrase.AstNode) (len=5) {
                                            (*lexer.Token)(StringLiteral 1361 3 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 1364 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(EqualsEqualsEquals 1365 3 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 1368 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) SubscriptExpression,
                                              Children: ([]phrase.AstNode) (len=4) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) SimpleVariable,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*lexer.Token)(VariableName 1369 4 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(OpenBracket 1373 1 ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(IntegerLiteral 1374 1 ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(CloseBracket 1375 1 ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 1376 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(BarBar 1377 2 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 1379 1 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) EqualityExpression,
                                          Children: ([]phrase.AstNode) (len=5) {
                                            (*lexer.Token)(StringLiteral 1380 3 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 1383 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(EqualsEqualsEquals 1384 3 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 1387 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) SubscriptExpression,
                                              Children: ([]phrase.AstNode) (len=4) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) SimpleVariable,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*lexer.Token)(VariableName 1388 4 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(OpenBracket 1392 1 ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(IntegerLiteral 1393 1 ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(CloseBracket 1394 1 ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(CloseParenthesis 1395 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 1396 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) CompoundStatement,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*lexer.Token)(OpenBrace 1397 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 1398 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) StatementList,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ExpressionStatement,
                                              Children: ([]phrase.AstNode) (len=2) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) SimpleAssignmentExpression,
                                                  Children: ([]phrase.AstNode) (len=5) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(VariableName 1411 8 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Whitespace 1419 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Equals 1420 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 1421 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(IntegerLiteral 1422 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Semicolon 1423 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 1424 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(CloseBrace 1433 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 1434 10 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) IfStatement,
                                  Children: ([]phrase.AstNode) (len=9) {
                                    (*lexer.Token)(If 1444 2 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 1446 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(OpenParenthesis 1447 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) EqualityExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*lexer.Token)(StringLiteral 1448 4 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 1452 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(EqualsEqualsEquals 1453 3 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 1456 1 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SubscriptExpression,
                                          Children: ([]phrase.AstNode) (len=4) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) SimpleVariable,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(VariableName 1457 4 ModeScripting ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(OpenBracket 1461 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) SimpleVariable,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(VariableName 1462 8 ModeScripting ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(CloseBracket 1470 1 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(CloseParenthesis 1471 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 1472 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) CompoundStatement,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*lexer.Token)(OpenBrace 1473 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 1474 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) StatementList,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ReturnStatement,
                                              Children: ([]phrase.AstNode) (len=4) {
                                                (*lexer.Token)(Return 1487 6 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Whitespace 1493 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) FunctionCallExpression,
                                                  Children: ([]phrase.AstNode) (len=6) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) QualifiedName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) NamespaceName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 1494 11 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(OpenParenthesis 1505 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 1506 17 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ArgumentExpressionList,
                                                      Children: ([]phrase.AstNode) (len=7) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ArrayCreationExpression,
                                                          Children: ([]phrase.AstNode) (len=3) {
                                                            (*lexer.Token)(OpenBracket 1523 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) ArrayInitialiserList,
                                                              Children: ([]phrase.AstNode) (len=4) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) ArrayElement,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) ArrayValue,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*lexer.Token)(StringLiteral 1524 6 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                }),
                                                                (*lexer.Token)(Comma 1530 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 1531 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) ArrayElement,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) ArrayValue,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*lexer.Token)(StringLiteral 1532 6 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(CloseBracket 1538 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        }),
                                                        (*lexer.Token)(Comma 1539 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(Whitespace 1540 17 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ArrayCreationExpression,
                                                          Children: ([]phrase.AstNode) (len=3) {
                                                            (*lexer.Token)(OpenBracket 1557 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) ArrayInitialiserList,
                                                              Children: ([]phrase.AstNode) (len=4) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) ArrayElement,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) ArrayValue,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*lexer.Token)(StringLiteral 1558 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                }),
                                                                (*lexer.Token)(Comma 1562 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 1563 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) ArrayElement,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) ArrayValue,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*lexer.Token)(StringLiteral 1564 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(CloseBracket 1568 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        }),
                                                        (*lexer.Token)(Comma 1569 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(Whitespace 1570 17 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) FunctionCallExpression,
                                                          Children: ([]phrase.AstNode) (len=4) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) QualifiedName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) NamespaceName,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*lexer.Token)(Name 1587 6 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(OpenParenthesis 1593 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) ArgumentExpressionList,
                                                              Children: ([]phrase.AstNode) (len=7) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) SimpleVariable,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*lexer.Token)(VariableName 1594 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                }),
                                                                (*lexer.Token)(Comma 1598 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 1599 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                                  Children: ([]phrase.AstNode) (len=5) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*lexer.Token)(VariableName 1600 8 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(Whitespace 1608 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Plus 1609 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 1610 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(IntegerLiteral 1611 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                }),
                                                                (*lexer.Token)(Comma 1612 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 1613 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) UnaryOpExpression,
                                                                  Children: ([]phrase.AstNode) (len=2) {
                                                                    (*lexer.Token)(Minus 1614 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(IntegerLiteral 1615 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(CloseParenthesis 1616 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(Whitespace 1617 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(CloseParenthesis 1630 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Semicolon 1631 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 1632 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(CloseBrace 1641 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(Whitespace 1642 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) ElseClause,
                                      Children: ([]phrase.AstNode) (len=3) {
                                        (*lexer.Token)(Else 1643 4 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 1647 1 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) CompoundStatement,
                                          Children: ([]phrase.AstNode) (len=5) {
                                            (*lexer.Token)(OpenBrace 1648 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 1649 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) StatementList,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ReturnStatement,
                                                  Children: ([]phrase.AstNode) (len=4) {
                                                    (*lexer.Token)(Return 1662 6 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 1668 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ScopedCallExpression,
                                                      Children: ([]phrase.AstNode) (len=8) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) QualifiedName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) NamespaceName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 1669 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(ColonColon 1673 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ScopedMemberName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) Identifier,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 1675 20 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(OpenParenthesis 1695 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(Whitespace 1696 17 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                                          Children: ([]phrase.AstNode) (len=7) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) FunctionCallExpression,
                                                              Children: ([]phrase.AstNode) (len=4) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) QualifiedName,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) NamespaceName,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*lexer.Token)(Name 1713 6 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                }),
                                                                (*lexer.Token)(OpenParenthesis 1719 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) ArgumentExpressionList,
                                                                  Children: ([]phrase.AstNode) (len=7) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*lexer.Token)(VariableName 1720 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(Comma 1724 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 1725 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) AdditiveExpression,
                                                                      Children: ([]phrase.AstNode) (len=5) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) SimpleVariable,
                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                            (*lexer.Token)(VariableName 1726 8 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(Whitespace 1734 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Plus 1735 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Whitespace 1736 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(IntegerLiteral 1737 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(Comma 1738 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 1739 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) UnaryOpExpression,
                                                                      Children: ([]phrase.AstNode) (len=2) {
                                                                        (*lexer.Token)(Minus 1740 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(IntegerLiteral 1741 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                }),
                                                                (*lexer.Token)(CloseParenthesis 1742 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Comma 1743 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Whitespace 1744 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(StringLiteral 1745 3 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Comma 1748 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Whitespace 1749 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 1750 19 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(Whitespace 1769 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(CloseParenthesis 1782 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Semicolon 1783 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(Whitespace 1784 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(CloseBrace 1793 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Whitespace 1794 5 ModeScripting ModeScripting ModeScripting),
                            (*lexer.Token)(CloseBrace 1799 1 ModeScripting ModeScripting ModeScripting)
                          }
                        })
                      }
                    })
                  }
                }),
                (*lexer.Token)(Whitespace 1800 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) DocumentComment,
                  Children: ([]phrase.AstNode) (len=17) {
                    (*lexer.Token)(DocumentCommentStart 1806 3 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(DocumentCommentEndline 1809 1 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(Whitespace 1810 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentTag,
                      Children: ([]phrase.AstNode) (len=3) {
                        (*lexer.Token)(DocumentCommentStartline 1815 2 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(DocumentCommentTagName 1817 9 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) {
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(DocumentCommentEndline 1826 1 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(Whitespace 1827 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentDescription,
                      Children: ([]phrase.AstNode) (len=28) {
                        (*lexer.Token)(DocumentCommentStartline 1832 9 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1841 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1847 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1848 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1854 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1855 9 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1864 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1865 2 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1867 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1868 7 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1875 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(OpenParenthesis 1876 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1877 3 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1880 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1881 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1887 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1888 5 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1893 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1894 5 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1899 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1900 4 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1904 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1905 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1911 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 1912 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(CloseParenthesis 1918 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(DocumentCommentText 1919 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(DocumentCommentEndline 1920 1 ModeScripting ModeScripting ModeDocumentBlock)
                      }
                    }),
                    (*lexer.Token)(Whitespace 1921 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentParamTag,
                      Children: ([]phrase.AstNode) (len=8) {
                        (*lexer.Token)(DocumentCommentStartline 1926 9 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(AtParam 1935 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1941 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) TypeDeclaration,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) QualifiedName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) NamespaceName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*lexer.Token)(Name 1942 6 ModeScripting ModeScripting ModeDocumentBlock)
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(Whitespace 1948 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(VariableName 1954 4 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1958 3 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) (len=6) {
                            (*lexer.Token)(Name 1961 6 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 1967 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 1968 7 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 1975 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 1976 6 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(DocumentCommentEndline 1982 1 ModeScripting ModeScripting ModeDocumentBlock)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 1983 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentParamTag,
                      Children: ([]phrase.AstNode) (len=8) {
                        (*lexer.Token)(DocumentCommentStartline 1988 2 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(AtParam 1990 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 1996 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) TypeUnion,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) TypeDeclaration,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) QualifiedName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) NamespaceName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*lexer.Token)(Name 1997 4 ModeScripting ModeScripting ModeDocumentBlock)
                                      }
                                    })
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Bar 2001 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) TypeDeclaration,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) QualifiedName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) NamespaceName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*lexer.Token)(Name 2002 6 ModeScripting ModeScripting ModeDocumentBlock)
                                      }
                                    })
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(Whitespace 2008 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(VariableName 2009 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 2015 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) (len=4) {
                            (*lexer.Token)(Name 2016 5 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 2021 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 2022 4 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(DocumentCommentEndline 2026 1 ModeScripting ModeScripting ModeDocumentBlock)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 2027 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentParamTag,
                      Children: ([]phrase.AstNode) (len=8) {
                        (*lexer.Token)(DocumentCommentStartline 2032 2 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(AtParam 2034 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 2040 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) TypeDeclaration,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) QualifiedName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) NamespaceName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*lexer.Token)(Name 2041 4 ModeScripting ModeScripting ModeDocumentBlock)
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(Whitespace 2045 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(VariableName 2046 19 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 2065 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) (len=15) {
                            (*lexer.Token)(Name 2066 7 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 2073 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 2074 2 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 2076 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 2077 5 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 2082 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 2083 3 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 2086 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(IntegerLiteral 2087 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 2088 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Backslash 2089 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 2090 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 2091 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 2092 7 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(DocumentCommentEndline 2099 1 ModeScripting ModeScripting ModeDocumentBlock)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 2100 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentReturnTag,
                      Children: ([]phrase.AstNode) (len=6) {
                        (*lexer.Token)(DocumentCommentStartline 2105 9 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(AtReturn 2114 7 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 2121 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) TypeDeclaration,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) QualifiedName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) NamespaceName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*lexer.Token)(Name 2122 6 ModeScripting ModeScripting ModeDocumentBlock)
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(Whitespace 2128 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) (len=10) {
                            (*lexer.Token)(Name 2129 6 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 2135 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 2136 4 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 2140 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 2141 6 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 2147 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 2148 9 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 2157 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 2158 6 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(DocumentCommentEndline 2164 1 ModeScripting ModeScripting ModeDocumentBlock)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 2165 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(DocumentCommentEnd 2170 2 ModeScripting ModeScripting ModeDocumentBlock)
                  }
                }),
                (*lexer.Token)(Whitespace 2172 5 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) MethodDeclaration,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationHeader,
                      Children: ([]phrase.AstNode) (len=10) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) MemberModifierList,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Public 2177 6 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 2183 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Static 2184 6 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(Whitespace 2190 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Function 2191 8 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 2199 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) Identifier,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 2200 20 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(OpenParenthesis 2220 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ParameterDeclarationList,
                          Children: ([]phrase.AstNode) (len=7) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) TypeDeclaration,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 2221 6 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2227 1 ModeScripting ModeScripting),
                                (*lexer.Token)(VariableName 2228 4 ModeScripting ModeScripting)
                              }
                            }),
                            (*lexer.Token)(Comma 2232 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 2233 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(VariableName 2234 6 ModeScripting ModeScripting)
                              }
                            }),
                            (*lexer.Token)(Comma 2240 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 2241 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=7) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) TypeDeclaration,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 2242 4 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2246 1 ModeScripting ModeScripting),
                                (*lexer.Token)(VariableName 2247 19 ModeScripting ModeScripting),
                                (*lexer.Token)(Whitespace 2266 1 ModeScripting ModeScripting),
                                (*lexer.Token)(Equals 2267 1 ModeScripting ModeScripting),
                                (*lexer.Token)(Whitespace 2268 1 ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ConstantAccessExpression,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 2269 4 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(CloseParenthesis 2273 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 2274 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ReturnType,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Colon 2275 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 2276 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) TypeDeclaration,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) QualifiedName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) NamespaceName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*lexer.Token)(Name 2277 6 ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                })
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 2283 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationBody,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) CompoundStatement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*lexer.Token)(OpenBrace 2284 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 2285 9 ModeScripting ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) StatementList,
                              Children: ([]phrase.AstNode) (len=7) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) IfStatement,
                                  Children: ([]phrase.AstNode) (len=7) {
                                    (*lexer.Token)(If 2294 2 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 2296 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(OpenParenthesis 2297 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) EqualityExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ConstantAccessExpression,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) QualifiedName,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) NamespaceName,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*lexer.Token)(Name 2298 4 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                })
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 2302 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(ExclamationEqualsEquals 2303 3 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 2306 1 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 2307 6 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(CloseParenthesis 2313 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 2314 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) CompoundStatement,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*lexer.Token)(OpenBrace 2315 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 2316 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) StatementList,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ExpressionStatement,
                                              Children: ([]phrase.AstNode) (len=2) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) SimpleAssignmentExpression,
                                                  Children: ([]phrase.AstNode) (len=5) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(VariableName 2329 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Whitespace 2333 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Equals 2334 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 2335 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) FunctionCallExpression,
                                                      Children: ([]phrase.AstNode) (len=4) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) QualifiedName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) NamespaceName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 2336 11 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(OpenParenthesis 2347 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                                          Children: ([]phrase.AstNode) (len=7) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) AdditiveExpression,
                                                              Children: ([]phrase.AstNode) (len=5) {
                                                                (*lexer.Token)(StringLiteral 2348 4 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 2352 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Dot 2353 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 2354 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) SimpleVariable,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*lexer.Token)(VariableName 2355 6 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(Comma 2361 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Whitespace 2362 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 2363 6 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Comma 2369 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Whitespace 2370 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 2371 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(CloseParenthesis 2375 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    })
                                                  }
                                                }),
                                                (*lexer.Token)(Semicolon 2376 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 2377 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(CloseBrace 2386 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2387 10 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) SimpleAssignmentExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 2397 6 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 2403 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Equals 2404 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 2405 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(StringLiteral 2406 2 ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 2408 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2409 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) IfStatement,
                                  Children: ([]phrase.AstNode) (len=7) {
                                    (*lexer.Token)(If 2418 2 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 2420 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(OpenParenthesis 2421 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) SimpleVariable,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*lexer.Token)(VariableName 2422 19 ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(CloseParenthesis 2441 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 2442 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) CompoundStatement,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*lexer.Token)(OpenBrace 2443 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 2444 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) StatementList,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ExpressionStatement,
                                              Children: ([]phrase.AstNode) (len=2) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) SimpleAssignmentExpression,
                                                  Children: ([]phrase.AstNode) (len=5) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(VariableName 2457 6 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Whitespace 2463 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Equals 2464 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 2465 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(StringLiteral 2466 22 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Semicolon 2488 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 2489 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(CloseBrace 2498 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2499 10 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ReturnStatement,
                                  Children: ([]phrase.AstNode) (len=4) {
                                    (*lexer.Token)(Return 2509 6 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 2515 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) FunctionCallExpression,
                                      Children: ([]phrase.AstNode) (len=6) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) QualifiedName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) NamespaceName,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(Name 2516 21 ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(OpenParenthesis 2537 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 2538 13 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                          Children: ([]phrase.AstNode) (len=7) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) AdditiveExpression,
                                              Children: ([]phrase.AstNode) (len=5) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                  Children: ([]phrase.AstNode) (len=5) {
                                                    (*lexer.Token)(StringLiteral 2551 53 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 2604 1 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Dot 2605 1 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 2606 1 ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(VariableName 2607 6 ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    })
                                                  }
                                                }),
                                                (*lexer.Token)(Whitespace 2613 1 ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Dot 2614 1 ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Whitespace 2615 1 ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(StringLiteral 2616 4 ModeScripting ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(Comma 2620 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 2621 13 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) AnonymousFunctionCreationExpression,
                                              Children: ([]phrase.AstNode) (len=3) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) AnonymousFunctionHeader,
                                                  Children: ([]phrase.AstNode) (len=4) {
                                                    (*lexer.Token)(Function 2634 8 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(OpenParenthesis 2642 1 ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ParameterDeclarationList,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ParameterDeclaration,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(VariableName 2643 8 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(CloseParenthesis 2651 1 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Whitespace 2652 1 ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) FunctionDeclarationBody,
                                                  Children: ([]phrase.AstNode) (len=5) {
                                                    (*lexer.Token)(OpenBrace 2653 1 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 2654 17 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) StatementList,
                                                      Children: ([]phrase.AstNode) (len=3) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ExpressionStatement,
                                                          Children: ([]phrase.AstNode) (len=2) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleAssignmentExpression,
                                                              Children: ([]phrase.AstNode) (len=5) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) SimpleVariable,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*lexer.Token)(VariableName 2671 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                }),
                                                                (*lexer.Token)(Whitespace 2675 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Equals 2676 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 2677 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) SubscriptExpression,
                                                                  Children: ([]phrase.AstNode) (len=4) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*lexer.Token)(VariableName 2678 8 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(OpenBracket 2686 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(IntegerLiteral 2687 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(CloseBracket 2688 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(Semicolon 2689 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        }),
                                                        (*lexer.Token)(Whitespace 2690 18 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) IfStatement,
                                                          Children: ([]phrase.AstNode) (len=11) {
                                                            (*lexer.Token)(If 2708 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Whitespace 2710 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(OpenParenthesis 2711 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) IssetIntrinsic,
                                                              Children: ([]phrase.AstNode) (len=4) {
                                                                (*lexer.Token)(Isset 2712 5 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(OpenParenthesis 2717 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) VariableList,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) SubscriptExpression,
                                                                      Children: ([]phrase.AstNode) (len=4) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) ScopedPropertyAccessExpression,
                                                                          Children: ([]phrase.AstNode) (len=3) {
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) QualifiedName,
                                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) NamespaceName,
                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                    (*lexer.Token)(Name 2718 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                  }
                                                                                })
                                                                              }
                                                                            }),
                                                                            (*lexer.Token)(ColonColon 2722 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) ScopedMemberName,
                                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                                (*lexer.Token)(VariableName 2724 13 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            })
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(OpenBracket 2737 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) SimpleVariable,
                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                            (*lexer.Token)(VariableName 2738 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(CloseBracket 2742 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                }),
                                                                (*lexer.Token)(CloseParenthesis 2743 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(CloseParenthesis 2744 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Whitespace 2745 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) CompoundStatement,
                                                              Children: ([]phrase.AstNode) (len=5) {
                                                                (*lexer.Token)(OpenBrace 2746 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 2747 21 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) StatementList,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) ReturnStatement,
                                                                      Children: ([]phrase.AstNode) (len=4) {
                                                                        (*lexer.Token)(Return 2768 6 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Whitespace 2774 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) SubscriptExpression,
                                                                          Children: ([]phrase.AstNode) (len=4) {
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) ScopedPropertyAccessExpression,
                                                                              Children: ([]phrase.AstNode) (len=3) {
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) QualifiedName,
                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) NamespaceName,
                                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                                        (*lexer.Token)(Name 2775 4 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                      }
                                                                                    })
                                                                                  }
                                                                                }),
                                                                                (*lexer.Token)(ColonColon 2779 2 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) ScopedMemberName,
                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                    (*lexer.Token)(VariableName 2781 13 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                  }
                                                                                })
                                                                              }
                                                                            }),
                                                                            (*lexer.Token)(OpenBracket 2794 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                                (*lexer.Token)(VariableName 2795 4 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            }),
                                                                            (*lexer.Token)(CloseBracket 2799 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(Semicolon 2800 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                }),
                                                                (*lexer.Token)(Whitespace 2801 17 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(CloseBrace 2818 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Whitespace 2819 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) ElseIfClauseList,
                                                              Children: ([]phrase.AstNode) (len=3) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) ElseIfClause,
                                                                  Children: ([]phrase.AstNode) (len=7) {
                                                                    (*lexer.Token)(ElseIf 2820 6 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 2826 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(OpenParenthesis 2827 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) LogicalExpression,
                                                                      Children: ([]phrase.AstNode) (len=5) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) EqualityExpression,
                                                                          Children: ([]phrase.AstNode) (len=5) {
                                                                            (*lexer.Token)(StringLiteral 2828 3 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(Whitespace 2831 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(EqualsEqualsEquals 2832 3 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(Whitespace 2835 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) SubscriptExpression,
                                                                              Children: ([]phrase.AstNode) (len=4) {
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) SimpleVariable,
                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                    (*lexer.Token)(VariableName 2836 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                  }
                                                                                }),
                                                                                (*lexer.Token)(OpenBracket 2840 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*lexer.Token)(IntegerLiteral 2841 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*lexer.Token)(CloseBracket 2842 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            })
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(Whitespace 2843 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(BarBar 2844 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Whitespace 2846 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) EqualityExpression,
                                                                          Children: ([]phrase.AstNode) (len=5) {
                                                                            (*lexer.Token)(StringLiteral 2847 3 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(Whitespace 2850 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(EqualsEqualsEquals 2851 3 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(Whitespace 2854 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) SubscriptExpression,
                                                                              Children: ([]phrase.AstNode) (len=4) {
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) SimpleVariable,
                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                    (*lexer.Token)(VariableName 2855 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                  }
                                                                                }),
                                                                                (*lexer.Token)(OpenBracket 2859 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*lexer.Token)(IntegerLiteral 2860 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*lexer.Token)(CloseBracket 2861 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            })
                                                                          }
                                                                        })
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(CloseParenthesis 2862 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 2863 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) CompoundStatement,
                                                                      Children: ([]phrase.AstNode) (len=5) {
                                                                        (*lexer.Token)(OpenBrace 2864 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Whitespace 2865 21 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) StatementList,
                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) ReturnStatement,
                                                                              Children: ([]phrase.AstNode) (len=4) {
                                                                                (*lexer.Token)(Return 2886 6 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*lexer.Token)(Whitespace 2892 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) FunctionCallExpression,
                                                                                  Children: ([]phrase.AstNode) (len=4) {
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) QualifiedName,
                                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                                        (*phrase.Phrase)({
                                                                                          Type: (phrase.PhraseType) NamespaceName,
                                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                                            (*lexer.Token)(Name 2893 3 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                          }
                                                                                        })
                                                                                      }
                                                                                    }),
                                                                                    (*lexer.Token)(OpenParenthesis 2896 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) ArgumentExpressionList,
                                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                                        (*phrase.Phrase)({
                                                                                          Type: (phrase.PhraseType) FunctionCallExpression,
                                                                                          Children: ([]phrase.AstNode) (len=4) {
                                                                                            (*phrase.Phrase)({
                                                                                              Type: (phrase.PhraseType) QualifiedName,
                                                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                                                (*phrase.Phrase)({
                                                                                                  Type: (phrase.PhraseType) NamespaceName,
                                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                                    (*lexer.Token)(Name 2897 6 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                                  }
                                                                                                })
                                                                                              }
                                                                                            }),
                                                                                            (*lexer.Token)(OpenParenthesis 2903 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                            (*phrase.Phrase)({
                                                                                              Type: (phrase.PhraseType) ArgumentExpressionList,
                                                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                                                (*phrase.Phrase)({
                                                                                                  Type: (phrase.PhraseType) SimpleVariable,
                                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                                    (*lexer.Token)(VariableName 2904 4 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                                  }
                                                                                                })
                                                                                              }
                                                                                            }),
                                                                                            (*lexer.Token)(CloseParenthesis 2908 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                          }
                                                                                        })
                                                                                      }
                                                                                    }),
                                                                                    (*lexer.Token)(CloseParenthesis 2909 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                  }
                                                                                }),
                                                                                (*lexer.Token)(Semicolon 2910 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            })
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(Whitespace 2911 17 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(CloseBrace 2928 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                }),
                                                                (*lexer.Token)(Whitespace 2929 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) ElseIfClause,
                                                                  Children: ([]phrase.AstNode) (len=7) {
                                                                    (*lexer.Token)(ElseIf 2930 6 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 2936 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(OpenParenthesis 2937 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) EqualityExpression,
                                                                      Children: ([]phrase.AstNode) (len=5) {
                                                                        (*lexer.Token)(StringLiteral 2938 3 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Whitespace 2941 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(EqualsEqualsEquals 2942 3 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Whitespace 2945 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) SubscriptExpression,
                                                                          Children: ([]phrase.AstNode) (len=4) {
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                                (*lexer.Token)(VariableName 2946 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            }),
                                                                            (*lexer.Token)(OpenBracket 2950 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(IntegerLiteral 2951 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(CloseBracket 2952 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        })
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(CloseParenthesis 2953 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 2954 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) CompoundStatement,
                                                                      Children: ([]phrase.AstNode) (len=5) {
                                                                        (*lexer.Token)(OpenBrace 2955 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Whitespace 2956 21 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) StatementList,
                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) ReturnStatement,
                                                                              Children: ([]phrase.AstNode) (len=4) {
                                                                                (*lexer.Token)(Return 2977 6 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*lexer.Token)(Whitespace 2983 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) ScopedCallExpression,
                                                                                  Children: ([]phrase.AstNode) (len=6) {
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) QualifiedName,
                                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                                        (*phrase.Phrase)({
                                                                                          Type: (phrase.PhraseType) NamespaceName,
                                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                                            (*lexer.Token)(Name 2984 4 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                          }
                                                                                        })
                                                                                      }
                                                                                    }),
                                                                                    (*lexer.Token)(ColonColon 2988 2 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) ScopedMemberName,
                                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                                        (*phrase.Phrase)({
                                                                                          Type: (phrase.PhraseType) Identifier,
                                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                                            (*lexer.Token)(Name 2990 15 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                          }
                                                                                        })
                                                                                      }
                                                                                    }),
                                                                                    (*lexer.Token)(OpenParenthesis 3005 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) ArgumentExpressionList,
                                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                                        (*phrase.Phrase)({
                                                                                          Type: (phrase.PhraseType) FunctionCallExpression,
                                                                                          Children: ([]phrase.AstNode) (len=4) {
                                                                                            (*phrase.Phrase)({
                                                                                              Type: (phrase.PhraseType) QualifiedName,
                                                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                                                (*phrase.Phrase)({
                                                                                                  Type: (phrase.PhraseType) NamespaceName,
                                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                                    (*lexer.Token)(Name 3006 6 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                                  }
                                                                                                })
                                                                                              }
                                                                                            }),
                                                                                            (*lexer.Token)(OpenParenthesis 3012 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                            (*phrase.Phrase)({
                                                                                              Type: (phrase.PhraseType) ArgumentExpressionList,
                                                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                                                (*phrase.Phrase)({
                                                                                                  Type: (phrase.PhraseType) SubscriptExpression,
                                                                                                  Children: ([]phrase.AstNode) (len=4) {
                                                                                                    (*phrase.Phrase)({
                                                                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                                                        (*lexer.Token)(VariableName 3013 8 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                                      }
                                                                                                    }),
                                                                                                    (*lexer.Token)(OpenBracket 3021 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                                    (*lexer.Token)(IntegerLiteral 3022 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                                    (*lexer.Token)(CloseBracket 3023 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                                  }
                                                                                                })
                                                                                              }
                                                                                            }),
                                                                                            (*lexer.Token)(CloseParenthesis 3024 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                          }
                                                                                        })
                                                                                      }
                                                                                    }),
                                                                                    (*lexer.Token)(CloseParenthesis 3025 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                  }
                                                                                }),
                                                                                (*lexer.Token)(Semicolon 3026 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            })
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(Whitespace 3027 17 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(CloseBrace 3044 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(Whitespace 3045 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) ElseClause,
                                                              Children: ([]phrase.AstNode) (len=3) {
                                                                (*lexer.Token)(Else 3046 4 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 3050 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) CompoundStatement,
                                                                  Children: ([]phrase.AstNode) (len=5) {
                                                                    (*lexer.Token)(OpenBrace 3051 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 3052 21 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) StatementList,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) ReturnStatement,
                                                                          Children: ([]phrase.AstNode) (len=4) {
                                                                            (*lexer.Token)(Return 3073 6 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(Whitespace 3079 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) FunctionCallExpression,
                                                                              Children: ([]phrase.AstNode) (len=4) {
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) QualifiedName,
                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) NamespaceName,
                                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                                        (*lexer.Token)(Name 3080 3 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                      }
                                                                                    })
                                                                                  }
                                                                                }),
                                                                                (*lexer.Token)(OpenParenthesis 3083 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) ArgumentExpressionList,
                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) FunctionCallExpression,
                                                                                      Children: ([]phrase.AstNode) (len=4) {
                                                                                        (*phrase.Phrase)({
                                                                                          Type: (phrase.PhraseType) QualifiedName,
                                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                                            (*phrase.Phrase)({
                                                                                              Type: (phrase.PhraseType) NamespaceName,
                                                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                                                (*lexer.Token)(Name 3084 6 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                              }
                                                                                            })
                                                                                          }
                                                                                        }),
                                                                                        (*lexer.Token)(OpenParenthesis 3090 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                        (*phrase.Phrase)({
                                                                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                                            (*phrase.Phrase)({
                                                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                                                (*lexer.Token)(VariableName 3091 4 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                              }
                                                                                            })
                                                                                          }
                                                                                        }),
                                                                                        (*lexer.Token)(CloseParenthesis 3095 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                      }
                                                                                    })
                                                                                  }
                                                                                }),
                                                                                (*lexer.Token)(CloseParenthesis 3096 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            }),
                                                                            (*lexer.Token)(Semicolon 3097 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        })
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(Whitespace 3098 17 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(CloseBrace 3115 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            })
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(Whitespace 3116 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(CloseBrace 3129 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(Comma 3130 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 3131 13 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) SimpleVariable,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(VariableName 3144 4 ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 3148 9 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(CloseParenthesis 3157 1 ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 3158 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Whitespace 3159 5 ModeScripting ModeScripting ModeScripting),
                            (*lexer.Token)(CloseBrace 3164 1 ModeScripting ModeScripting ModeScripting)
                          }
                        })
                      }
                    })
                  }
                }),
                (*lexer.Token)(Whitespace 3165 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) DocumentComment,
                  Children: ([]phrase.AstNode) (len=10) {
                    (*lexer.Token)(DocumentCommentStart 3171 3 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(DocumentCommentEndline 3174 1 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(Whitespace 3175 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentDescription,
                      Children: ([]phrase.AstNode) (len=23) {
                        (*lexer.Token)(DocumentCommentStartline 3180 2 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 3182 8 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 3190 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 3191 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 3192 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 3193 7 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 3200 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 3201 4 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 3205 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 3206 5 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 3211 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 3212 2 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 3214 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 3215 3 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 3218 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 3219 3 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(DocumentCommentText 3222 2 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 3224 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 3225 7 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 3232 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Name 3233 14 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(DocumentCommentText 3247 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(DocumentCommentEndline 3248 1 ModeScripting ModeScripting ModeDocumentBlock)
                      }
                    }),
                    (*lexer.Token)(Whitespace 3249 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentParamTag,
                      Children: ([]phrase.AstNode) (len=8) {
                        (*lexer.Token)(DocumentCommentStartline 3254 9 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(AtParam 3263 6 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 3269 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) TypeDeclaration,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) QualifiedName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) NamespaceName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*lexer.Token)(Name 3270 3 ModeScripting ModeScripting ModeDocumentBlock)
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(Whitespace 3273 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(VariableName 3274 4 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 3278 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) (len=4) {
                            (*lexer.Token)(Name 3279 4 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 3283 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 3284 5 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(DocumentCommentEndline 3289 1 ModeScripting ModeScripting ModeDocumentBlock)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 3290 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) DocumentCommentReturnTag,
                      Children: ([]phrase.AstNode) (len=6) {
                        (*lexer.Token)(DocumentCommentStartline 3295 9 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(AtReturn 3304 7 ModeScripting ModeScripting ModeDocumentBlock),
                        (*lexer.Token)(Whitespace 3311 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) TypeDeclaration,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) QualifiedName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) NamespaceName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*lexer.Token)(Name 3312 6 ModeScripting ModeScripting ModeDocumentBlock)
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(Whitespace 3318 1 ModeScripting ModeScripting ModeDocumentBlock),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DocumentCommentDescription,
                          Children: ([]phrase.AstNode) (len=11) {
                            (*lexer.Token)(Name 3319 3 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(DocumentCommentText 3322 2 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 3324 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 3325 14 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 3339 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 3340 2 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 3342 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 3343 4 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Whitespace 3347 1 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(Name 3348 5 ModeScripting ModeScripting ModeDocumentBlock),
                            (*lexer.Token)(DocumentCommentEndline 3353 1 ModeScripting ModeScripting ModeDocumentBlock)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 3354 5 ModeScripting ModeScripting ModeDocumentBlock),
                    (*lexer.Token)(DocumentCommentEnd 3359 2 ModeScripting ModeScripting ModeDocumentBlock)
                  }
                }),
                (*lexer.Token)(Whitespace 3361 5 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) MethodDeclaration,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationHeader,
                      Children: ([]phrase.AstNode) (len=10) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) MemberModifierList,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Private 3366 7 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 3373 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Static 3374 6 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(Whitespace 3380 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Function 3381 8 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 3389 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) Identifier,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 3390 15 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(OpenParenthesis 3405 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ParameterDeclarationList,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) TypeDeclaration,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 3406 3 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 3409 1 ModeScripting ModeScripting),
                                (*lexer.Token)(VariableName 3410 4 ModeScripting ModeScripting)
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(CloseParenthesis 3414 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 3415 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ReturnType,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Colon 3416 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 3417 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) TypeDeclaration,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) QualifiedName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) NamespaceName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*lexer.Token)(Name 3418 6 ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                })
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 3424 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationBody,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) CompoundStatement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*lexer.Token)(OpenBrace 3425 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 3426 9 ModeScripting ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) StatementList,
                              Children: ([]phrase.AstNode) (len=9) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) IfStatement,
                                  Children: ([]phrase.AstNode) (len=7) {
                                    (*lexer.Token)(If 3435 2 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 3437 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(OpenParenthesis 3438 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) RelationalExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 3439 4 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 3443 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(LessThanEquals 3444 2 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 3446 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(IntegerLiteral 3447 4 ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(CloseParenthesis 3451 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 3452 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) CompoundStatement,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*lexer.Token)(OpenBrace 3453 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 3454 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) StatementList,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ReturnStatement,
                                              Children: ([]phrase.AstNode) (len=4) {
                                                (*lexer.Token)(Return 3467 6 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Whitespace 3473 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) FunctionCallExpression,
                                                  Children: ([]phrase.AstNode) (len=4) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) QualifiedName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) NamespaceName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 3474 3 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(OpenParenthesis 3477 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ArgumentExpressionList,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) SimpleVariable,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(VariableName 3478 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(CloseParenthesis 3482 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Semicolon 3483 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 3484 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(CloseBrace 3493 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 3494 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) IfStatement,
                                  Children: ([]phrase.AstNode) (len=7) {
                                    (*lexer.Token)(If 3503 2 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 3505 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(OpenParenthesis 3506 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) RelationalExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 3507 4 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 3511 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(LessThanEquals 3512 2 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 3514 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(IntegerLiteral 3515 5 ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(CloseParenthesis 3520 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 3521 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) CompoundStatement,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*lexer.Token)(OpenBrace 3522 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 3523 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) StatementList,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ReturnStatement,
                                              Children: ([]phrase.AstNode) (len=4) {
                                                (*lexer.Token)(Return 3536 6 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Whitespace 3542 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                  Children: ([]phrase.AstNode) (len=5) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) FunctionCallExpression,
                                                      Children: ([]phrase.AstNode) (len=4) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) QualifiedName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) NamespaceName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 3543 3 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(OpenParenthesis 3546 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) AdditiveExpression,
                                                              Children: ([]phrase.AstNode) (len=5) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) EncapsulatedExpression,
                                                                  Children: ([]phrase.AstNode) (len=3) {
                                                                    (*lexer.Token)(OpenParenthesis 3547 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) ShiftExpression,
                                                                      Children: ([]phrase.AstNode) (len=3) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) SimpleVariable,
                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                            (*lexer.Token)(VariableName 3548 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(GreaterThanGreaterThan 3552 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(IntegerLiteral 3554 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(CloseParenthesis 3555 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                }),
                                                                (*lexer.Token)(Whitespace 3556 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Plus 3557 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 3558 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(IntegerLiteral 3559 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(CloseParenthesis 3563 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Whitespace 3564 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Dot 3565 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 3566 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) FunctionCallExpression,
                                                      Children: ([]phrase.AstNode) (len=4) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) QualifiedName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) NamespaceName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 3567 3 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(OpenParenthesis 3570 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) AdditiveExpression,
                                                              Children: ([]phrase.AstNode) (len=5) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) EncapsulatedExpression,
                                                                  Children: ([]phrase.AstNode) (len=3) {
                                                                    (*lexer.Token)(OpenParenthesis 3571 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) BitwiseExpression,
                                                                      Children: ([]phrase.AstNode) (len=3) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) SimpleVariable,
                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                            (*lexer.Token)(VariableName 3572 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(Ampersand 3576 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(IntegerLiteral 3577 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(CloseParenthesis 3581 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                }),
                                                                (*lexer.Token)(Whitespace 3582 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Plus 3583 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 3584 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(IntegerLiteral 3585 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(CloseParenthesis 3589 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    })
                                                  }
                                                }),
                                                (*lexer.Token)(Semicolon 3590 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 3591 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(CloseBrace 3600 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 3601 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) IfStatement,
                                  Children: ([]phrase.AstNode) (len=7) {
                                    (*lexer.Token)(If 3610 2 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 3612 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(OpenParenthesis 3613 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) RelationalExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 3614 4 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 3618 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(LessThanEquals 3619 2 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 3621 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(IntegerLiteral 3622 6 ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(CloseParenthesis 3628 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 3629 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) CompoundStatement,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*lexer.Token)(OpenBrace 3630 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 3631 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) StatementList,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ReturnStatement,
                                              Children: ([]phrase.AstNode) (len=4) {
                                                (*lexer.Token)(Return 3644 6 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Whitespace 3650 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                  Children: ([]phrase.AstNode) (len=5) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) AdditiveExpression,
                                                      Children: ([]phrase.AstNode) (len=5) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) FunctionCallExpression,
                                                          Children: ([]phrase.AstNode) (len=4) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) QualifiedName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) NamespaceName,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*lexer.Token)(Name 3651 3 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(OpenParenthesis 3654 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) ArgumentExpressionList,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                                  Children: ([]phrase.AstNode) (len=5) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) EncapsulatedExpression,
                                                                      Children: ([]phrase.AstNode) (len=3) {
                                                                        (*lexer.Token)(OpenParenthesis 3655 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) ShiftExpression,
                                                                          Children: ([]phrase.AstNode) (len=3) {
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                                (*lexer.Token)(VariableName 3656 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            }),
                                                                            (*lexer.Token)(GreaterThanGreaterThan 3660 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(IntegerLiteral 3662 2 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(CloseParenthesis 3664 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(Whitespace 3665 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Plus 3666 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 3667 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(IntegerLiteral 3668 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(CloseParenthesis 3672 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        }),
                                                        (*lexer.Token)(Whitespace 3673 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(Dot 3674 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(Whitespace 3675 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) FunctionCallExpression,
                                                          Children: ([]phrase.AstNode) (len=4) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) QualifiedName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) NamespaceName,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*lexer.Token)(Name 3676 3 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(OpenParenthesis 3679 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) ArgumentExpressionList,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                                  Children: ([]phrase.AstNode) (len=5) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) EncapsulatedExpression,
                                                                      Children: ([]phrase.AstNode) (len=3) {
                                                                        (*lexer.Token)(OpenParenthesis 3680 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) BitwiseExpression,
                                                                          Children: ([]phrase.AstNode) (len=3) {
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) EncapsulatedExpression,
                                                                              Children: ([]phrase.AstNode) (len=3) {
                                                                                (*lexer.Token)(OpenParenthesis 3681 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) ShiftExpression,
                                                                                  Children: ([]phrase.AstNode) (len=3) {
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                                        (*lexer.Token)(VariableName 3682 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                      }
                                                                                    }),
                                                                                    (*lexer.Token)(GreaterThanGreaterThan 3686 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                    (*lexer.Token)(IntegerLiteral 3688 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                  }
                                                                                }),
                                                                                (*lexer.Token)(CloseParenthesis 3689 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            }),
                                                                            (*lexer.Token)(Ampersand 3690 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(IntegerLiteral 3691 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(CloseParenthesis 3695 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(Whitespace 3696 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Plus 3697 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 3698 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(IntegerLiteral 3699 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(CloseParenthesis 3703 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(Whitespace 3704 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Dot 3705 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 3706 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) FunctionCallExpression,
                                                      Children: ([]phrase.AstNode) (len=4) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) QualifiedName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) NamespaceName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 3707 3 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(OpenParenthesis 3710 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) AdditiveExpression,
                                                              Children: ([]phrase.AstNode) (len=5) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) EncapsulatedExpression,
                                                                  Children: ([]phrase.AstNode) (len=3) {
                                                                    (*lexer.Token)(OpenParenthesis 3711 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) BitwiseExpression,
                                                                      Children: ([]phrase.AstNode) (len=3) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) SimpleVariable,
                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                            (*lexer.Token)(VariableName 3712 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(Ampersand 3716 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(IntegerLiteral 3717 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(CloseParenthesis 3721 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                }),
                                                                (*lexer.Token)(Whitespace 3722 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Plus 3723 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 3724 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(IntegerLiteral 3725 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(CloseParenthesis 3729 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    })
                                                  }
                                                }),
                                                (*lexer.Token)(Semicolon 3730 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 3731 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(CloseBrace 3740 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 3741 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) IfStatement,
                                  Children: ([]phrase.AstNode) (len=7) {
                                    (*lexer.Token)(If 3750 2 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 3752 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(OpenParenthesis 3753 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) RelationalExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 3754 4 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 3758 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(LessThanEquals 3759 2 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 3761 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(IntegerLiteral 3762 8 ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(CloseParenthesis 3770 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 3771 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) CompoundStatement,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*lexer.Token)(OpenBrace 3772 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 3773 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) StatementList,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ReturnStatement,
                                              Children: ([]phrase.AstNode) (len=4) {
                                                (*lexer.Token)(Return 3786 6 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Whitespace 3792 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                  Children: ([]phrase.AstNode) (len=5) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) AdditiveExpression,
                                                      Children: ([]phrase.AstNode) (len=5) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) AdditiveExpression,
                                                          Children: ([]phrase.AstNode) (len=5) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) FunctionCallExpression,
                                                              Children: ([]phrase.AstNode) (len=4) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) QualifiedName,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) NamespaceName,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*lexer.Token)(Name 3793 3 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                }),
                                                                (*lexer.Token)(OpenParenthesis 3796 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) ArgumentExpressionList,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) AdditiveExpression,
                                                                      Children: ([]phrase.AstNode) (len=5) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) EncapsulatedExpression,
                                                                          Children: ([]phrase.AstNode) (len=3) {
                                                                            (*lexer.Token)(OpenParenthesis 3797 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) ShiftExpression,
                                                                              Children: ([]phrase.AstNode) (len=3) {
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) SimpleVariable,
                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                    (*lexer.Token)(VariableName 3798 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                  }
                                                                                }),
                                                                                (*lexer.Token)(GreaterThanGreaterThan 3802 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*lexer.Token)(IntegerLiteral 3804 2 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            }),
                                                                            (*lexer.Token)(CloseParenthesis 3806 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(Whitespace 3807 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Plus 3808 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Whitespace 3809 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(IntegerLiteral 3810 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                }),
                                                                (*lexer.Token)(CloseParenthesis 3814 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Whitespace 3815 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Dot 3816 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Whitespace 3817 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) FunctionCallExpression,
                                                              Children: ([]phrase.AstNode) (len=4) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) QualifiedName,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) NamespaceName,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*lexer.Token)(Name 3818 3 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                }),
                                                                (*lexer.Token)(OpenParenthesis 3821 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) ArgumentExpressionList,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) AdditiveExpression,
                                                                      Children: ([]phrase.AstNode) (len=5) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) EncapsulatedExpression,
                                                                          Children: ([]phrase.AstNode) (len=3) {
                                                                            (*lexer.Token)(OpenParenthesis 3822 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) BitwiseExpression,
                                                                              Children: ([]phrase.AstNode) (len=3) {
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) EncapsulatedExpression,
                                                                                  Children: ([]phrase.AstNode) (len=3) {
                                                                                    (*lexer.Token)(OpenParenthesis 3823 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) ShiftExpression,
                                                                                      Children: ([]phrase.AstNode) (len=3) {
                                                                                        (*phrase.Phrase)({
                                                                                          Type: (phrase.PhraseType) SimpleVariable,
                                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                                            (*lexer.Token)(VariableName 3824 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                          }
                                                                                        }),
                                                                                        (*lexer.Token)(GreaterThanGreaterThan 3828 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                        (*lexer.Token)(IntegerLiteral 3830 2 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                      }
                                                                                    }),
                                                                                    (*lexer.Token)(CloseParenthesis 3832 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                  }
                                                                                }),
                                                                                (*lexer.Token)(Ampersand 3833 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*lexer.Token)(IntegerLiteral 3834 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            }),
                                                                            (*lexer.Token)(CloseParenthesis 3838 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(Whitespace 3839 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Plus 3840 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Whitespace 3841 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(IntegerLiteral 3842 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                }),
                                                                (*lexer.Token)(CloseParenthesis 3846 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(Whitespace 3847 18 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(Dot 3865 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(Whitespace 3866 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) FunctionCallExpression,
                                                          Children: ([]phrase.AstNode) (len=4) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) QualifiedName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) NamespaceName,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*lexer.Token)(Name 3867 3 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(OpenParenthesis 3870 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) ArgumentExpressionList,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                                  Children: ([]phrase.AstNode) (len=5) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) EncapsulatedExpression,
                                                                      Children: ([]phrase.AstNode) (len=3) {
                                                                        (*lexer.Token)(OpenParenthesis 3871 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) BitwiseExpression,
                                                                          Children: ([]phrase.AstNode) (len=3) {
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) EncapsulatedExpression,
                                                                              Children: ([]phrase.AstNode) (len=3) {
                                                                                (*lexer.Token)(OpenParenthesis 3872 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) ShiftExpression,
                                                                                  Children: ([]phrase.AstNode) (len=3) {
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                                        (*lexer.Token)(VariableName 3873 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                      }
                                                                                    }),
                                                                                    (*lexer.Token)(GreaterThanGreaterThan 3877 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                    (*lexer.Token)(IntegerLiteral 3879 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                  }
                                                                                }),
                                                                                (*lexer.Token)(CloseParenthesis 3880 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                              }
                                                                            }),
                                                                            (*lexer.Token)(Ampersand 3881 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(IntegerLiteral 3882 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(CloseParenthesis 3886 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(Whitespace 3887 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Plus 3888 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 3889 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(IntegerLiteral 3890 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(CloseParenthesis 3894 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(Whitespace 3895 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Dot 3896 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 3897 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) FunctionCallExpression,
                                                      Children: ([]phrase.AstNode) (len=4) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) QualifiedName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) NamespaceName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 3898 3 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(OpenParenthesis 3901 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) AdditiveExpression,
                                                              Children: ([]phrase.AstNode) (len=5) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) EncapsulatedExpression,
                                                                  Children: ([]phrase.AstNode) (len=3) {
                                                                    (*lexer.Token)(OpenParenthesis 3902 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) BitwiseExpression,
                                                                      Children: ([]phrase.AstNode) (len=3) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) SimpleVariable,
                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                            (*lexer.Token)(VariableName 3903 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        }),
                                                                        (*lexer.Token)(Ampersand 3907 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(IntegerLiteral 3908 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(CloseParenthesis 3912 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                }),
                                                                (*lexer.Token)(Whitespace 3913 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Plus 3914 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 3915 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(IntegerLiteral 3916 4 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(CloseParenthesis 3920 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    })
                                                  }
                                                }),
                                                (*lexer.Token)(Semicolon 3921 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 3922 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(CloseBrace 3931 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 3932 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ThrowStatement,
                                  Children: ([]phrase.AstNode) (len=4) {
                                    (*lexer.Token)(Throw 3941 5 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 3946 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) ObjectCreationExpression,
                                      Children: ([]phrase.AstNode) (len=6) {
                                        (*lexer.Token)(New 3947 3 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 3950 1 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ClassTypeDesignator,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) QualifiedName,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) NamespaceName,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*lexer.Token)(Name 3951 5 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                })
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(OpenParenthesis 3956 1 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(StringLiteral 3957 62 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(CloseParenthesis 4019 1 ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 4020 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Whitespace 4021 5 ModeScripting ModeScripting ModeScripting),
                            (*lexer.Token)(CloseBrace 4026 1 ModeScripting ModeScripting ModeScripting)
                          }
                        })
                      }
                    })
                  }
                }),
                (*lexer.Token)(Whitespace 4027 10 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) MethodDeclaration,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationHeader,
                      Children: ([]phrase.AstNode) (len=9) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) MemberModifierList,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Public 4037 6 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(Whitespace 4043 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Function 4044 8 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 4052 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) Identifier,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 4053 7 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(OpenParenthesis 4060 1 ModeScripting ModeScripting),
                        (*lexer.Token)(CloseParenthesis 4061 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 4062 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ReturnType,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Colon 4063 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 4064 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) TypeDeclaration,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) QualifiedName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) NamespaceName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*lexer.Token)(Name 4065 6 ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                })
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 4071 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationBody,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) CompoundStatement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*lexer.Token)(OpenBrace 4072 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 4073 9 ModeScripting ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) StatementList,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ReturnStatement,
                                  Children: ([]phrase.AstNode) (len=4) {
                                    (*lexer.Token)(Return 4082 6 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 4088 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(StringLiteral 4089 15 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Semicolon 4104 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Whitespace 4105 5 ModeScripting ModeScripting ModeScripting),
                            (*lexer.Token)(CloseBrace 4110 1 ModeScripting ModeScripting ModeScripting)
                          }
                        })
                      }
                    })
                  }
                })
              }
            }),
            (*lexer.Token)(Whitespace 4111 1 ModeScripting ModeScripting),
            (*lexer.Token)(CloseBrace 4112 1 ModeScripting ModeScripting)
          }
        })
      }
    }),
    (*lexer.Token)(Whitespace 4113 1 ModeScripting)
  }
})
