([]*lexer.Token) (len=57) {
  (*lexer.Token)(OpenTag 0 7),
  (*lexer.Token)(Whitespace 7 2),
  (*lexer.Token)(Namespace 9 9),
  (*lexer.Token)(Whitespace 18 1),
  (*lexer.Token)(Name 19 14),
  (*lexer.Token)(Semicolon 33 1),
  (*lexer.Token)(Whitespace 34 4),
  (*lexer.Token)(Class 38 5),
  (*lexer.Token)(Whitespace 43 1),
  (*lexer.Token)(Name 44 9),
  (*lexer.Token)(Whitespace 53 1),
  (*lexer.Token)(OpenBrace 54 1),
  (*lexer.Token)(Whitespace 55 6),
  (*lexer.Token)(Const 61 5),
  (*lexer.Token)(Whitespace 66 1),
  (*lexer.Token)(Name 67 6),
  (*lexer.Token)(Whitespace 73 1),
  (*lexer.Token)(Equals 74 1),
  (*lexer.Token)(Whitespace 75 1),
  (*lexer.Token)(StringLiteral 76 5),
  (*lexer.Token)(Semicolon 81 1),
  (*lexer.Token)(Whitespace 82 8),
  (*lexer.Token)(Public 90 6),
  (*lexer.Token)(Whitespace 96 1),
  (*lexer.Token)(Function 97 8),
  (*lexer.Token)(Whitespace 105 1),
  (*lexer.Token)(Name 106 10),
  (*lexer.Token)(OpenParenthesis 116 1),
  (*lexer.Token)(CloseParenthesis 117 1),
  (*lexer.Token)(Whitespace 118 1),
  (*lexer.Token)(OpenBrace 119 1),
  (*lexer.Token)(Whitespace 120 8),
  (*lexer.Token)(CloseBrace 128 1),
  (*lexer.Token)(Whitespace 129 2),
  (*lexer.Token)(CloseBrace 131 1),
  (*lexer.Token)(Whitespace 132 4),
  (*lexer.Token)(Const 136 5),
  (*lexer.Token)(Whitespace 141 1),
  (*lexer.Token)(Name 142 6),
  (*lexer.Token)(Whitespace 148 1),
  (*lexer.Token)(Equals 149 1),
  (*lexer.Token)(Whitespace 150 1),
  (*lexer.Token)(StringLiteral 151 5),
  (*lexer.Token)(Semicolon 156 1),
  (*lexer.Token)(Semicolon 157 1),
  (*lexer.Token)(Whitespace 158 4),
  (*lexer.Token)(Function 162 8),
  (*lexer.Token)(Whitespace 170 1),
  (*lexer.Token)(Name 171 12),
  (*lexer.Token)(OpenParenthesis 183 1),
  (*lexer.Token)(CloseParenthesis 184 1),
  (*lexer.Token)(Whitespace 185 1),
  (*lexer.Token)(OpenBrace 186 1),
  (*lexer.Token)(Whitespace 187 4),
  (*lexer.Token)(CloseBrace 191 1),
  (*lexer.Token)(Whitespace 192 2),
  (*lexer.Token)(EndOfFile 194 0)
}
(*phrase.Phrase)({
  Type: (phrase.PhraseType) StatementList,
  Children: ([]phrase.AstNode) (len=11) {
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) InlineText,
      Children: ([]phrase.AstNode) (len=1) {
        (*lexer.Token)(OpenTag 0 7)
      }
    }),
    (*lexer.Token)(Whitespace 7 2),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceDefinition,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Namespace 9 9),
        (*lexer.Token)(Whitespace 18 1),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceName,
          Children: ([]phrase.AstNode) (len=1) {
            (*lexer.Token)(Name 19 14)
          }
        }),
        (*lexer.Token)(Semicolon 33 1)
      }
    }),
    (*lexer.Token)(Whitespace 34 4),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) ClassDeclaration,
      Children: ([]phrase.AstNode) (len=3) {
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) ClassDeclarationHeader,
          Children: ([]phrase.AstNode) (len=3) {
            (*lexer.Token)(Class 38 5),
            (*lexer.Token)(Whitespace 43 1),
            (*lexer.Token)(Name 44 9)
          }
        }),
        (*lexer.Token)(Whitespace 53 1),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) ClassDeclarationBody,
          Children: ([]phrase.AstNode) (len=5) {
            (*lexer.Token)(OpenBrace 54 1),
            (*lexer.Token)(Whitespace 55 6),
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) ClassMemberDeclarationList,
              Children: ([]phrase.AstNode) (len=3) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) ClassConstDeclaration,
                  Children: ([]phrase.AstNode) (len=4) {
                    (*lexer.Token)(Const 61 5),
                    (*lexer.Token)(Whitespace 66 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) ClassConstElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ClassConstElement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) Identifier,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 67 6)
                              }
                            }),
                            (*lexer.Token)(Whitespace 73 1),
                            (*lexer.Token)(Equals 74 1),
                            (*lexer.Token)(Whitespace 75 1),
                            (*lexer.Token)(StringLiteral 76 5)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 81 1)
                  }
                }),
                (*lexer.Token)(Whitespace 82 8),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) MethodDeclaration,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationHeader,
                      Children: ([]phrase.AstNode) (len=7) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) MemberModifierList,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Public 90 6)
                          }
                        }),
                        (*lexer.Token)(Whitespace 96 1),
                        (*lexer.Token)(Function 97 8),
                        (*lexer.Token)(Whitespace 105 1),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) Identifier,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 106 10)
                          }
                        }),
                        (*lexer.Token)(OpenParenthesis 116 1),
                        (*lexer.Token)(CloseParenthesis 117 1)
                      }
                    }),
                    (*lexer.Token)(Whitespace 118 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationBody,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) CompoundStatement,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(OpenBrace 119 1),
                            (*lexer.Token)(Whitespace 120 8),
                            (*lexer.Token)(CloseBrace 128 1)
                          }
                        })
                      }
                    })
                  }
                })
              }
            }),
            (*lexer.Token)(Whitespace 129 2),
            (*lexer.Token)(CloseBrace 131 1)
          }
        })
      }
    }),
    (*lexer.Token)(Whitespace 132 4),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) ConstDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Const 136 5),
        (*lexer.Token)(Whitespace 141 1),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) ConstElementList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) ConstElement,
              Children: ([]phrase.AstNode) (len=5) {
                (*lexer.Token)(Name 142 6),
                (*lexer.Token)(Whitespace 148 1),
                (*lexer.Token)(Equals 149 1),
                (*lexer.Token)(Whitespace 150 1),
                (*lexer.Token)(StringLiteral 151 5)
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 156 1)
      }
    }),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NullStatement,
      Children: ([]phrase.AstNode) (len=1) {
        (*lexer.Token)(Semicolon 157 1)
      }
    }),
    (*lexer.Token)(Whitespace 158 4),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) FunctionDeclaration,
      Children: ([]phrase.AstNode) (len=3) {
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) FunctionDeclarationHeader,
          Children: ([]phrase.AstNode) (len=5) {
            (*lexer.Token)(Function 162 8),
            (*lexer.Token)(Whitespace 170 1),
            (*lexer.Token)(Name 171 12),
            (*lexer.Token)(OpenParenthesis 183 1),
            (*lexer.Token)(CloseParenthesis 184 1)
          }
        }),
        (*lexer.Token)(Whitespace 185 1),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) FunctionDeclarationBody,
          Children: ([]phrase.AstNode) (len=3) {
            (*lexer.Token)(OpenBrace 186 1),
            (*lexer.Token)(Whitespace 187 4),
            (*lexer.Token)(CloseBrace 191 1)
          }
        })
      }
    }),
    (*lexer.Token)(Whitespace 192 2)
  }
})
