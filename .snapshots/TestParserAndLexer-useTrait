([]struct { Type parser.TokenType; Offset int; Length int }) (len=15) {
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) OpenTag,
    Offset: (int) 0,
    Length: (int) 6
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 6,
    Length: (int) 4
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Class,
    Offset: (int) 10,
    Length: (int) 5
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 15,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Name,
    Offset: (int) 16,
    Length: (int) 3
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 19,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) OpenBrace,
    Offset: (int) 20,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 21,
    Length: (int) 9
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Use,
    Offset: (int) 30,
    Length: (int) 3
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 33,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Name,
    Offset: (int) 34,
    Length: (int) 3
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Semicolon,
    Offset: (int) 37,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 38,
    Length: (int) 5
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) CloseBrace,
    Offset: (int) 43,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) EndOfFile,
    Offset: (int) 44,
    Length: (int) 0
  }
}
(*parser.Phrase)({
  Type: (parser.PhraseType) StatementList,
  Children: ([]parser.AstNode) (len=3) {
    (*parser.Phrase)({
      Type: (parser.PhraseType) InlineText,
      Children: ([]parser.AstNode) (len=1) {
        (*parser.Token)(OpenTag 0 6 ModeInitial)
      }
    }),
    (*parser.Token)(Whitespace 6 4 ModeScripting),
    (*parser.Phrase)({
      Type: (parser.PhraseType) ClassDeclaration,
      Children: ([]parser.AstNode) (len=3) {
        (*parser.Phrase)({
          Type: (parser.PhraseType) ClassDeclarationHeader,
          Children: ([]parser.AstNode) (len=3) {
            (*parser.Token)(Class 10 5 ModeScripting),
            (*parser.Token)(Whitespace 15 1 ModeScripting),
            (*parser.Token)(Name 16 3 ModeScripting)
          }
        }),
        (*parser.Token)(Whitespace 19 1 ModeScripting),
        (*parser.Phrase)({
          Type: (parser.PhraseType) ClassDeclarationBody,
          Children: ([]parser.AstNode) (len=5) {
            (*parser.Token)(OpenBrace 20 1 ModeScripting),
            (*parser.Token)(Whitespace 21 9 ModeScripting ModeScripting),
            (*parser.Phrase)({
              Type: (parser.PhraseType) ClassMemberDeclarationList,
              Children: ([]parser.AstNode) (len=1) {
                (*parser.Phrase)({
                  Type: (parser.PhraseType) TraitUseClause,
                  Children: ([]parser.AstNode) (len=4) {
                    (*parser.Token)(Use 30 3 ModeScripting ModeScripting),
                    (*parser.Token)(Whitespace 33 1 ModeScripting ModeScripting),
                    (*parser.Phrase)({
                      Type: (parser.PhraseType) QualifiedNameList,
                      Children: ([]parser.AstNode) (len=1) {
                        (*parser.Phrase)({
                          Type: (parser.PhraseType) QualifiedName,
                          Children: ([]parser.AstNode) (len=1) {
                            (*parser.Phrase)({
                              Type: (parser.PhraseType) NamespaceName,
                              Children: ([]parser.AstNode) (len=1) {
                                (*parser.Token)(Name 34 3 ModeScripting ModeScripting)
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*parser.Phrase)({
                      Type: (parser.PhraseType) TraitUseSpecification,
                      Children: ([]parser.AstNode) (len=1) {
                        (*parser.Token)(Semicolon 37 1 ModeScripting ModeScripting)
                      }
                    })
                  }
                })
              }
            }),
            (*parser.Token)(Whitespace 38 5 ModeScripting ModeScripting),
            (*parser.Token)(CloseBrace 43 1 ModeScripting ModeScripting)
          }
        })
      }
    })
  }
})
