([]struct { Type lexer.TokenType; Offset int; Length int }) (len=630) {
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenTag,
    Offset: (int) 0,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 6,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Namespace,
    Offset: (int) 7,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 16,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 17,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 20,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 21,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 23,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 26,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 27,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 34,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 35,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 41,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 42,
    Length: (int) 15
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 57,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 58,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 64,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 65,
    Length: (int) 16
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 81,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 82,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 83,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 86,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 87,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 94,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 95,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 104,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 105,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 111,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 112,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 118,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 119,
    Length: (int) 15
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 134,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 135,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 136,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 139,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 140,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 147,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 148,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 157,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 158,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 164,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 165,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 173,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 174,
    Length: (int) 12
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 186,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 187,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 188,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 191,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 192,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 199,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 200,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 209,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 210,
    Length: (int) 19
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 229,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 230,
    Length: (int) 16
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 246,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 247,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 248,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 251,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 252,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 259,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 260,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 269,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 270,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 280,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 281,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 287,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) As,
    Offset: (int) 288,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 290,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 291,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 301,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 302,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 303,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 306,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 307,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 314,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 315,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 324,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 325,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 332,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 333,
    Length: (int) 22
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 355,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 356,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 357,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 360,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 361,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 368,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 369,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 378,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 379,
    Length: (int) 14
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 393,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 394,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 401,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 402,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 403,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 406,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 407,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 414,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 415,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 424,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 425,
    Length: (int) 14
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 439,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 440,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 448,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 449,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 450,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 453,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 454,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 461,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 462,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 471,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 472,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 482,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 483,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 492,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 493,
    Length: (int) 21
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 514,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 515,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 516,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 519,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 520,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 527,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 528,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 537,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 538,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 548,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 549,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 558,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 559,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 572,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 573,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Class,
    Offset: (int) 575,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 580,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 581,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 587,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Extends,
    Offset: (int) 588,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 595,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 596,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 606,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 607,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 608,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Use,
    Offset: (int) 613,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 616,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 617,
    Length: (int) 16
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 633,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 634,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Private,
    Offset: (int) 640,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 647,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Const,
    Offset: (int) 648,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 653,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 654,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 665,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 666,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 667,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 668,
    Length: (int) 21
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 689,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 690,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Public,
    Offset: (int) 696,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 702,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Function,
    Offset: (int) 703,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 711,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 712,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 718,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 719,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 726,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 727,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 735,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 736,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 737,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 742,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 743,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 744,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 745,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 749,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 751,
    Length: (int) 14
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 765,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 766,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 767,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 773,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 774,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 775,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 776,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 780,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 781,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 786,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 787,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Try,
    Offset: (int) 796,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 799,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 800,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 801,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 814,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 823,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 824,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 825,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 826,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 832,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 834,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 840,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 841,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 849,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 850,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 851,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 856,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 857,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 858,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 864,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 865,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 866,
    Length: (int) 14
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 880,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 886,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 887,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 896,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 897,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comment,
    Offset: (int) 906,
    Length: (int) 65
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 971,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comment,
    Offset: (int) 980,
    Length: (int) 54
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1034,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 1043,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1044,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Catch,
    Offset: (int) 1045,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1050,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1051,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1052,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1065,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1066,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1068,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1069,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 1070,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1071,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comment,
    Offset: (int) 1084,
    Length: (int) 54
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1138,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) If,
    Offset: (int) 1151,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1153,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1154,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1155,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1157,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) InstanceOf,
    Offset: (int) 1158,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1168,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1169,
    Length: (int) 21
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1190,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1191,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 1192,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1193,
    Length: (int) 17
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 1210,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1216,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) New,
    Offset: (int) 1217,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1220,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1221,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1229,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1230,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1232,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1233,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1234,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 1242,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1244,
    Length: (int) 14
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1258,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 1259,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1260,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 1273,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1274,
    Length: (int) 14
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 1288,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1294,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) New,
    Offset: (int) 1295,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1298,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1299,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1307,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1308,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1310,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1311,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1312,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 1320,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1322,
    Length: (int) 26
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1348,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 1349,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1350,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 1359,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1360,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 1365,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1366,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Public,
    Offset: (int) 1372,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1378,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Function,
    Offset: (int) 1379,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1387,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1388,
    Length: (int) 15
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1403,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1404,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Colon,
    Offset: (int) 1405,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1406,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1407,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1415,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 1420,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1421,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1430,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1439,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 1440,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1441,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Require,
    Offset: (int) 1442,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1449,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1450,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 1455,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1457,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1470,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1471,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 1472,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1473,
    Length: (int) 21
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 1494,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1495,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ForEach,
    Offset: (int) 1504,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1511,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1512,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1513,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1522,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) As,
    Offset: (int) 1523,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1525,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1526,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1532,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) FatArrow,
    Offset: (int) 1533,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1535,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1536,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1541,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1542,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 1543,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1544,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) If,
    Offset: (int) 1557,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1559,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1560,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1561,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 1566,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1567,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 1572,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1574,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 1585,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1586,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) QuestionQuestion,
    Offset: (int) 1587,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1589,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1590,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBracket,
    Offset: (int) 1595,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1596,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBracket,
    Offset: (int) 1601,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1602,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) QuestionQuestion,
    Offset: (int) 1603,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1605,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1606,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1611,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1612,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 1613,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1614,
    Length: (int) 17
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Yield,
    Offset: (int) 1631,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1636,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) New,
    Offset: (int) 1637,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1640,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1641,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1647,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1648,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 1649,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1650,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 1663,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1664,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 1673,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1674,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 1679,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1680,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Public,
    Offset: (int) 1686,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1692,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Function,
    Offset: (int) 1693,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1701,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1702,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1715,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1716,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Colon,
    Offset: (int) 1717,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1718,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1719,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1725,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 1730,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1731,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Return,
    Offset: (int) 1740,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1746,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Backslash,
    Offset: (int) 1747,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1748,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1755,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) DirectoryConstant,
    Offset: (int) 1756,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1763,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 1764,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1765,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 1770,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1771,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Protected,
    Offset: (int) 1777,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1786,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Function,
    Offset: (int) 1787,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1795,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1796,
    Length: (int) 18
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1814,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1815,
    Length: (int) 16
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1831,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1832,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 1842,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1843,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1844,
    Length: (int) 15
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1859,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1860,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1867,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Colon,
    Offset: (int) 1868,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1869,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1870,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1874,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 1879,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1880,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1889,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 1899,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1901,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1912,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) New,
    Offset: (int) 1913,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1916,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1917,
    Length: (int) 12
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1929,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1930,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 1935,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1937,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 1950,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1951,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 1952,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 1953,
    Length: (int) 21
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1974,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 1975,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 1976,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 1977,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 1986,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 1996,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 1998,
    Length: (int) 12
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2010,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2011,
    Length: (int) 38
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2049,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2050,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2051,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2055,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2056,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2057,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2066,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2074,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 2075,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2076,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2077,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 2082,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2084,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2097,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2098,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2099,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2100,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2109,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2110,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2120,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 2127,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2129,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2133,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2134,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2142,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2143,
    Length: (int) 15
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2158,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2159,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 2163,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2165,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2176,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2177,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2178,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2184,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2185,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2186,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2195,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 2202,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2204,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2208,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2209,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2217,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2218,
    Length: (int) 14
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2232,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2233,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 2238,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2240,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2251,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2252,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2259,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2260,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 2264,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2266,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2277,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2278,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2279,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2285,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2286,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2287,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2296,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 2303,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2305,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2309,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2310,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2318,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2319,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2332,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2333,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 2337,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2339,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2350,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2351,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2352,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2358,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2359,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2360,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2369,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 2376,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2378,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2382,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2383,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2391,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2392,
    Length: (int) 14
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2406,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2407,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 2412,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2414,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2425,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2426,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 2430,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2432,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2443,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2444,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2445,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2451,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2452,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2453,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 2458,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2459,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Protected,
    Offset: (int) 2465,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2474,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Function,
    Offset: (int) 2475,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2483,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2484,
    Length: (int) 15
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2499,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2500,
    Length: (int) 22
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2522,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2523,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2530,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Colon,
    Offset: (int) 2531,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2532,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2533,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2537,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 2542,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2543,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2552,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2560,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 2561,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2562,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2563,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 2568,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2570,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2583,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2584,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2585,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2586,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2595,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2596,
    Length: (int) 10
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2606,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 2613,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2615,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2621,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2622,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2630,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2631,
    Length: (int) 12
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2643,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2644,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 2649,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2651,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2662,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2663,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2670,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2671,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 2675,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2677,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2688,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2689,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2690,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2693,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2694,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2695,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2701,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2702,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2703,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2712,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 2719,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2721,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2727,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2728,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2736,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2737,
    Length: (int) 13
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2750,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2751,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 2755,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2757,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2768,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2769,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2770,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2773,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2774,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2775,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2781,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2782,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2783,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2792,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Arrow,
    Offset: (int) 2799,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2801,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenParenthesis,
    Offset: (int) 2807,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 2808,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2816,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2817,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Dot,
    Offset: (int) 2828,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2829,
    Length: (int) 4
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) ColonColon,
    Offset: (int) 2833,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 2835,
    Length: (int) 11
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2846,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2847,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2848,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Comma,
    Offset: (int) 2851,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2852,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 2853,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseParenthesis,
    Offset: (int) 2859,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 2860,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2861,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 2866,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2867,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 2868,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 2869,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) EndOfFile,
    Offset: (int) 2870,
    Length: (int) 0
  }
}
(*phrase.Phrase)({
  Type: (phrase.PhraseType) StatementList,
  Children: ([]phrase.AstNode) (len=26) {
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) InlineText,
      Children: ([]phrase.AstNode) (len=1) {
        (*lexer.Token)(OpenTag 0 6 ModeInitial)
      }
    }),
    (*lexer.Token)(Whitespace 6 1 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceDefinition,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Namespace 7 9 ModeScripting),
        (*lexer.Token)(Whitespace 16 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceName,
          Children: ([]phrase.AstNode) (len=1) {
            (*lexer.Token)(Name 17 3 ModeScripting)
          }
        }),
        (*lexer.Token)(Semicolon 20 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 21 2 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 23 3 ModeScripting),
        (*lexer.Token)(Whitespace 26 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=9) {
                    (*lexer.Token)(Name 27 7 ModeScripting),
                    (*lexer.Token)(Backslash 34 1 ModeScripting),
                    (*lexer.Token)(Name 35 6 ModeScripting),
                    (*lexer.Token)(Backslash 41 1 ModeScripting),
                    (*lexer.Token)(Name 42 15 ModeScripting),
                    (*lexer.Token)(Backslash 57 1 ModeScripting),
                    (*lexer.Token)(Name 58 6 ModeScripting),
                    (*lexer.Token)(Backslash 64 1 ModeScripting),
                    (*lexer.Token)(Name 65 16 ModeScripting)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 81 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 82 1 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 83 3 ModeScripting),
        (*lexer.Token)(Whitespace 86 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=9) {
                    (*lexer.Token)(Name 87 7 ModeScripting),
                    (*lexer.Token)(Backslash 94 1 ModeScripting),
                    (*lexer.Token)(Name 95 9 ModeScripting),
                    (*lexer.Token)(Backslash 104 1 ModeScripting),
                    (*lexer.Token)(Name 105 6 ModeScripting),
                    (*lexer.Token)(Backslash 111 1 ModeScripting),
                    (*lexer.Token)(Name 112 6 ModeScripting),
                    (*lexer.Token)(Backslash 118 1 ModeScripting),
                    (*lexer.Token)(Name 119 15 ModeScripting)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 134 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 135 1 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 136 3 ModeScripting),
        (*lexer.Token)(Whitespace 139 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=9) {
                    (*lexer.Token)(Name 140 7 ModeScripting),
                    (*lexer.Token)(Backslash 147 1 ModeScripting),
                    (*lexer.Token)(Name 148 9 ModeScripting),
                    (*lexer.Token)(Backslash 157 1 ModeScripting),
                    (*lexer.Token)(Name 158 6 ModeScripting),
                    (*lexer.Token)(Backslash 164 1 ModeScripting),
                    (*lexer.Token)(Name 165 8 ModeScripting),
                    (*lexer.Token)(Backslash 173 1 ModeScripting),
                    (*lexer.Token)(Name 174 12 ModeScripting)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 186 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 187 1 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 188 3 ModeScripting),
        (*lexer.Token)(Whitespace 191 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=7) {
                    (*lexer.Token)(Name 192 7 ModeScripting),
                    (*lexer.Token)(Backslash 199 1 ModeScripting),
                    (*lexer.Token)(Name 200 9 ModeScripting),
                    (*lexer.Token)(Backslash 209 1 ModeScripting),
                    (*lexer.Token)(Name 210 19 ModeScripting),
                    (*lexer.Token)(Backslash 229 1 ModeScripting),
                    (*lexer.Token)(Name 230 16 ModeScripting)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 246 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 247 1 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 248 3 ModeScripting),
        (*lexer.Token)(Whitespace 251 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=3) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=7) {
                    (*lexer.Token)(Name 252 7 ModeScripting),
                    (*lexer.Token)(Backslash 259 1 ModeScripting),
                    (*lexer.Token)(Name 260 9 ModeScripting),
                    (*lexer.Token)(Backslash 269 1 ModeScripting),
                    (*lexer.Token)(Name 270 10 ModeScripting),
                    (*lexer.Token)(Backslash 280 1 ModeScripting),
                    (*lexer.Token)(Name 281 6 ModeScripting)
                  }
                }),
                (*lexer.Token)(Whitespace 287 1 ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceAliasingClause,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*lexer.Token)(As 288 2 ModeScripting),
                    (*lexer.Token)(Whitespace 290 1 ModeScripting),
                    (*lexer.Token)(Name 291 10 ModeScripting)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 301 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 302 1 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 303 3 ModeScripting),
        (*lexer.Token)(Whitespace 306 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=7) {
                    (*lexer.Token)(Name 307 7 ModeScripting),
                    (*lexer.Token)(Backslash 314 1 ModeScripting),
                    (*lexer.Token)(Name 315 9 ModeScripting),
                    (*lexer.Token)(Backslash 324 1 ModeScripting),
                    (*lexer.Token)(Name 325 7 ModeScripting),
                    (*lexer.Token)(Backslash 332 1 ModeScripting),
                    (*lexer.Token)(Name 333 22 ModeScripting)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 355 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 356 1 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 357 3 ModeScripting),
        (*lexer.Token)(Whitespace 360 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=7) {
                    (*lexer.Token)(Name 361 7 ModeScripting),
                    (*lexer.Token)(Backslash 368 1 ModeScripting),
                    (*lexer.Token)(Name 369 9 ModeScripting),
                    (*lexer.Token)(Backslash 378 1 ModeScripting),
                    (*lexer.Token)(Name 379 14 ModeScripting),
                    (*lexer.Token)(Backslash 393 1 ModeScripting),
                    (*lexer.Token)(Name 394 7 ModeScripting)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 401 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 402 1 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 403 3 ModeScripting),
        (*lexer.Token)(Whitespace 406 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=7) {
                    (*lexer.Token)(Name 407 7 ModeScripting),
                    (*lexer.Token)(Backslash 414 1 ModeScripting),
                    (*lexer.Token)(Name 415 9 ModeScripting),
                    (*lexer.Token)(Backslash 424 1 ModeScripting),
                    (*lexer.Token)(Name 425 14 ModeScripting),
                    (*lexer.Token)(Backslash 439 1 ModeScripting),
                    (*lexer.Token)(Name 440 8 ModeScripting)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 448 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 449 1 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 450 3 ModeScripting),
        (*lexer.Token)(Whitespace 453 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=9) {
                    (*lexer.Token)(Name 454 7 ModeScripting),
                    (*lexer.Token)(Backslash 461 1 ModeScripting),
                    (*lexer.Token)(Name 462 9 ModeScripting),
                    (*lexer.Token)(Backslash 471 1 ModeScripting),
                    (*lexer.Token)(Name 472 10 ModeScripting),
                    (*lexer.Token)(Backslash 482 1 ModeScripting),
                    (*lexer.Token)(Name 483 9 ModeScripting),
                    (*lexer.Token)(Backslash 492 1 ModeScripting),
                    (*lexer.Token)(Name 493 21 ModeScripting)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 514 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 515 1 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=4) {
        (*lexer.Token)(Use 516 3 ModeScripting),
        (*lexer.Token)(Whitespace 519 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseClause,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=9) {
                    (*lexer.Token)(Name 520 7 ModeScripting),
                    (*lexer.Token)(Backslash 527 1 ModeScripting),
                    (*lexer.Token)(Name 528 9 ModeScripting),
                    (*lexer.Token)(Backslash 537 1 ModeScripting),
                    (*lexer.Token)(Name 538 10 ModeScripting),
                    (*lexer.Token)(Backslash 548 1 ModeScripting),
                    (*lexer.Token)(Name 549 9 ModeScripting),
                    (*lexer.Token)(Backslash 558 1 ModeScripting),
                    (*lexer.Token)(Name 559 13 ModeScripting)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 572 1 ModeScripting)
      }
    }),
    (*lexer.Token)(Whitespace 573 2 ModeScripting),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) ClassDeclaration,
      Children: ([]phrase.AstNode) (len=3) {
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) ClassDeclarationHeader,
          Children: ([]phrase.AstNode) (len=5) {
            (*lexer.Token)(Class 575 5 ModeScripting),
            (*lexer.Token)(Whitespace 580 1 ModeScripting),
            (*lexer.Token)(Name 581 6 ModeScripting),
            (*lexer.Token)(Whitespace 587 1 ModeScripting),
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) ClassBaseClause,
              Children: ([]phrase.AstNode) (len=3) {
                (*lexer.Token)(Extends 588 7 ModeScripting),
                (*lexer.Token)(Whitespace 595 1 ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) QualifiedName,
                  Children: ([]phrase.AstNode) (len=1) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) NamespaceName,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*lexer.Token)(Name 596 10 ModeScripting)
                      }
                    })
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Whitespace 606 1 ModeScripting),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) ClassDeclarationBody,
          Children: ([]phrase.AstNode) (len=5) {
            (*lexer.Token)(OpenBrace 607 1 ModeScripting),
            (*lexer.Token)(Whitespace 608 5 ModeScripting ModeScripting),
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) ClassMemberDeclarationList,
              Children: ([]phrase.AstNode) (len=13) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) TraitUseClause,
                  Children: ([]phrase.AstNode) (len=4) {
                    (*lexer.Token)(Use 613 3 ModeScripting ModeScripting),
                    (*lexer.Token)(Whitespace 616 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) QualifiedNameList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) QualifiedName,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) NamespaceName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 617 16 ModeScripting ModeScripting)
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) TraitUseSpecification,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*lexer.Token)(Semicolon 633 1 ModeScripting ModeScripting)
                      }
                    })
                  }
                }),
                (*lexer.Token)(Whitespace 634 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) ClassConstDeclaration,
                  Children: ([]phrase.AstNode) (len=6) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MemberModifierList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*lexer.Token)(Private 640 7 ModeScripting ModeScripting)
                      }
                    }),
                    (*lexer.Token)(Whitespace 647 1 ModeScripting ModeScripting),
                    (*lexer.Token)(Const 648 5 ModeScripting ModeScripting),
                    (*lexer.Token)(Whitespace 653 1 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) ClassConstElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ClassConstElement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) Identifier,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 654 11 ModeScripting ModeScripting)
                              }
                            }),
                            (*lexer.Token)(Whitespace 665 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Equals 666 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 667 1 ModeScripting ModeScripting),
                            (*lexer.Token)(StringLiteral 668 21 ModeScripting ModeScripting)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 689 1 ModeScripting ModeScripting)
                  }
                }),
                (*lexer.Token)(Whitespace 690 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) MethodDeclaration,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationHeader,
                      Children: ([]phrase.AstNode) (len=8) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) MemberModifierList,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Public 696 6 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(Whitespace 702 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Function 703 8 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 711 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) Identifier,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 712 6 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(OpenParenthesis 718 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ParameterDeclarationList,
                          Children: ([]phrase.AstNode) (len=7) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) TypeDeclaration,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 719 7 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 726 1 ModeScripting ModeScripting),
                                (*lexer.Token)(VariableName 727 8 ModeScripting ModeScripting)
                              }
                            }),
                            (*lexer.Token)(Comma 735 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 736 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=5) {
                                (*lexer.Token)(VariableName 737 5 ModeScripting ModeScripting),
                                (*lexer.Token)(Whitespace 742 1 ModeScripting ModeScripting),
                                (*lexer.Token)(Equals 743 1 ModeScripting ModeScripting),
                                (*lexer.Token)(Whitespace 744 1 ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ClassConstantAccessExpression,
                                  Children: ([]phrase.AstNode) (len=3) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 745 4 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(ColonColon 749 2 ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) ScopedMemberName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) Identifier,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 751 14 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Comma 765 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 766 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=5) {
                                (*lexer.Token)(VariableName 767 6 ModeScripting ModeScripting),
                                (*lexer.Token)(Whitespace 773 1 ModeScripting ModeScripting),
                                (*lexer.Token)(Equals 774 1 ModeScripting ModeScripting),
                                (*lexer.Token)(Whitespace 775 1 ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ConstantAccessExpression,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 776 4 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                })
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(CloseParenthesis 780 1 ModeScripting ModeScripting)
                      }
                    }),
                    (*lexer.Token)(Whitespace 781 5 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationBody,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) CompoundStatement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*lexer.Token)(OpenBrace 786 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 787 9 ModeScripting ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) StatementList,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) TryStatement,
                                  Children: ([]phrase.AstNode) (len=5) {
                                    (*lexer.Token)(Try 796 3 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 799 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) CompoundStatement,
                                      Children: ([]phrase.AstNode) (len=9) {
                                        (*lexer.Token)(OpenBrace 800 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 801 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) StatementList,
                                          Children: ([]phrase.AstNode) (len=3) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ExpressionStatement,
                                              Children: ([]phrase.AstNode) (len=2) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) SimpleAssignmentExpression,
                                                  Children: ([]phrase.AstNode) (len=5) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(VariableName 814 9 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Whitespace 823 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Equals 824 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 825 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ScopedCallExpression,
                                                      Children: ([]phrase.AstNode) (len=4) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) QualifiedName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) NamespaceName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 826 6 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(ColonColon 832 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ScopedMemberName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) Identifier,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 834 6 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                                          Children: ([]phrase.AstNode) (len=9) {
                                                            (*lexer.Token)(OpenParenthesis 840 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 841 8 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Comma 849 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Whitespace 850 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 851 5 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Comma 856 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Whitespace 857 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 858 6 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(CloseParenthesis 864 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    })
                                                  }
                                                }),
                                                (*lexer.Token)(Semicolon 865 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                              }
                                            }),
                                            (*lexer.Token)(Whitespace 866 14 ModeScripting ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ReturnStatement,
                                              Children: ([]phrase.AstNode) (len=4) {
                                                (*lexer.Token)(Return 880 6 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Whitespace 886 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) SimpleVariable,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*lexer.Token)(VariableName 887 9 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Semicolon 896 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 897 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Comment 906 65 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 971 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Comment 980 54 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 1034 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(CloseBrace 1043 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(Whitespace 1044 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) CatchClauseList,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) CatchClause,
                                          Children: ([]phrase.AstNode) (len=9) {
                                            (*lexer.Token)(Catch 1045 5 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 1050 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(OpenParenthesis 1051 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) CatchNameList,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) QualifiedName,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) NamespaceName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(Name 1052 13 ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    })
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(Whitespace 1065 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(VariableName 1066 2 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(CloseParenthesis 1068 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 1069 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) CompoundStatement,
                                              Children: ([]phrase.AstNode) (len=7) {
                                                (*lexer.Token)(OpenBrace 1070 1 ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Whitespace 1071 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Comment 1084 54 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Whitespace 1138 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) StatementList,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) IfStatement,
                                                      Children: ([]phrase.AstNode) (len=7) {
                                                        (*lexer.Token)(If 1151 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(Whitespace 1153 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(OpenParenthesis 1154 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) InstanceOfExpression,
                                                          Children: ([]phrase.AstNode) (len=5) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 1155 2 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Whitespace 1157 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(InstanceOf 1158 10 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Whitespace 1168 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) InstanceofTypeDesignator,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) QualifiedName,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) NamespaceName,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*lexer.Token)(Name 1169 21 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                })
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(CloseParenthesis 1190 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(Whitespace 1191 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) CompoundStatement,
                                                          Children: ([]phrase.AstNode) (len=5) {
                                                            (*lexer.Token)(OpenBrace 1192 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Whitespace 1193 17 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) StatementList,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) ReturnStatement,
                                                                  Children: ([]phrase.AstNode) (len=4) {
                                                                    (*lexer.Token)(Return 1210 6 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 1216 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) ObjectCreationExpression,
                                                                      Children: ([]phrase.AstNode) (len=4) {
                                                                        (*lexer.Token)(New 1217 3 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(Whitespace 1220 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) ClassTypeDesignator,
                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) QualifiedName,
                                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) NamespaceName,
                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                    (*lexer.Token)(Name 1221 8 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                  }
                                                                                })
                                                                              }
                                                                            })
                                                                          }
                                                                        }),
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                                                          Children: ([]phrase.AstNode) (len=6) {
                                                                            (*lexer.Token)(OpenParenthesis 1229 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(StringLiteral 1230 2 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(Comma 1232 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*lexer.Token)(Whitespace 1233 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                            (*phrase.Phrase)({
                                                                              Type: (phrase.PhraseType) ClassConstantAccessExpression,
                                                                              Children: ([]phrase.AstNode) (len=3) {
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) QualifiedName,
                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) NamespaceName,
                                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                                        (*lexer.Token)(Name 1234 8 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                      }
                                                                                    })
                                                                                  }
                                                                                }),
                                                                                (*lexer.Token)(ColonColon 1242 2 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                                (*phrase.Phrase)({
                                                                                  Type: (phrase.PhraseType) ScopedMemberName,
                                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                                    (*phrase.Phrase)({
                                                                                      Type: (phrase.PhraseType) Identifier,
                                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                                        (*lexer.Token)(Name 1244 14 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                                      }
                                                                                    })
                                                                                  }
                                                                                })
                                                                              }
                                                                            }),
                                                                            (*lexer.Token)(CloseParenthesis 1258 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        })
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(Semicolon 1259 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(Whitespace 1260 13 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(CloseBrace 1273 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(Whitespace 1274 14 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ReturnStatement,
                                                      Children: ([]phrase.AstNode) (len=4) {
                                                        (*lexer.Token)(Return 1288 6 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(Whitespace 1294 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ObjectCreationExpression,
                                                          Children: ([]phrase.AstNode) (len=4) {
                                                            (*lexer.Token)(New 1295 3 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(Whitespace 1298 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) ClassTypeDesignator,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) QualifiedName,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) NamespaceName,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*lexer.Token)(Name 1299 8 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) ArgumentExpressionList,
                                                              Children: ([]phrase.AstNode) (len=6) {
                                                                (*lexer.Token)(OpenParenthesis 1307 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(StringLiteral 1308 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Comma 1310 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 1311 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) ClassConstantAccessExpression,
                                                                  Children: ([]phrase.AstNode) (len=3) {
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) QualifiedName,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) NamespaceName,
                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                            (*lexer.Token)(Name 1312 8 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        })
                                                                      }
                                                                    }),
                                                                    (*lexer.Token)(ColonColon 1320 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) ScopedMemberName,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) Identifier,
                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                            (*lexer.Token)(Name 1322 26 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        })
                                                                      }
                                                                    })
                                                                  }
                                                                }),
                                                                (*lexer.Token)(CloseParenthesis 1348 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(Semicolon 1349 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    })
                                                  }
                                                }),
                                                (*lexer.Token)(Whitespace 1350 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(CloseBrace 1359 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        })
                                      }
                                    })
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Whitespace 1360 5 ModeScripting ModeScripting ModeScripting),
                            (*lexer.Token)(CloseBrace 1365 1 ModeScripting ModeScripting ModeScripting)
                          }
                        })
                      }
                    })
                  }
                }),
                (*lexer.Token)(Whitespace 1366 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) MethodDeclaration,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationHeader,
                      Children: ([]phrase.AstNode) (len=8) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) MemberModifierList,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Public 1372 6 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(Whitespace 1378 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Function 1379 8 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 1387 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) Identifier,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 1388 15 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(OpenParenthesis 1403 1 ModeScripting ModeScripting),
                        (*lexer.Token)(CloseParenthesis 1404 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ReturnType,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Colon 1405 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 1406 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) TypeDeclaration,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) QualifiedName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) NamespaceName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*lexer.Token)(Name 1407 8 ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                })
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 1415 5 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationBody,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) CompoundStatement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*lexer.Token)(OpenBrace 1420 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 1421 9 ModeScripting ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) StatementList,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) SimpleAssignmentExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 1430 9 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 1439 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Equals 1440 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 1441 1 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) RequireExpression,
                                          Children: ([]phrase.AstNode) (len=3) {
                                            (*lexer.Token)(Require 1442 7 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 1449 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) AdditiveExpression,
                                              Children: ([]phrase.AstNode) (len=3) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) MethodCallExpression,
                                                  Children: ([]phrase.AstNode) (len=4) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(VariableName 1450 5 ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Arrow 1455 2 ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) MemberName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(Name 1457 13 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                                      }
                                                    }),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ArgumentExpressionList,
                                                      Children: ([]phrase.AstNode) (len=2) {
                                                        (*lexer.Token)(OpenParenthesis 1470 1 ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(CloseParenthesis 1471 1 ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    })
                                                  }
                                                }),
                                                (*lexer.Token)(Dot 1472 1 ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(StringLiteral 1473 21 ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 1494 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 1495 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ForeachStatement,
                                  Children: ([]phrase.AstNode) (len=13) {
                                    (*lexer.Token)(ForEach 1504 7 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 1511 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(OpenParenthesis 1512 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) ForeachCollection,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 1513 9 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Whitespace 1522 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(As 1523 2 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 1525 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) ForeachKey,
                                      Children: ([]phrase.AstNode) (len=3) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 1526 6 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 1532 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(FatArrow 1533 2 ModeScripting ModeScripting ModeScripting)
                                      }
                                    }),
                                    (*lexer.Token)(Whitespace 1535 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) ForeachValue,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 1536 5 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(CloseParenthesis 1541 1 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 1542 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) CompoundStatement,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*lexer.Token)(OpenBrace 1543 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 1544 13 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) StatementList,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) IfStatement,
                                              Children: ([]phrase.AstNode) (len=7) {
                                                (*lexer.Token)(If 1557 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Whitespace 1559 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(OpenParenthesis 1560 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) CoalesceExpression,
                                                  Children: ([]phrase.AstNode) (len=5) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) SubscriptExpression,
                                                      Children: ([]phrase.AstNode) (len=4) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) SimpleVariable,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(VariableName 1561 5 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        }),
                                                        (*lexer.Token)(OpenBracket 1566 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) PropertyAccessExpression,
                                                          Children: ([]phrase.AstNode) (len=3) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 1567 5 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Arrow 1572 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) MemberName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 1574 11 ModeScripting ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(CloseBracket 1585 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Whitespace 1586 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(QuestionQuestion 1587 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 1589 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) CoalesceExpression,
                                                      Children: ([]phrase.AstNode) (len=5) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) SubscriptExpression,
                                                          Children: ([]phrase.AstNode) (len=4) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 1590 5 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(OpenBracket 1595 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(StringLiteral 1596 5 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(CloseBracket 1601 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        }),
                                                        (*lexer.Token)(Whitespace 1602 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(QuestionQuestion 1603 2 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(Whitespace 1605 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ConstantAccessExpression,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) QualifiedName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) NamespaceName,
                                                                  Children: ([]phrase.AstNode) (len=1) {
                                                                    (*lexer.Token)(Name 1606 5 ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                  }
                                                                })
                                                              }
                                                            })
                                                          }
                                                        })
                                                      }
                                                    })
                                                  }
                                                }),
                                                (*lexer.Token)(CloseParenthesis 1611 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Whitespace 1612 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) CompoundStatement,
                                                  Children: ([]phrase.AstNode) (len=5) {
                                                    (*lexer.Token)(OpenBrace 1613 1 ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(Whitespace 1614 17 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) StatementList,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) ExpressionStatement,
                                                          Children: ([]phrase.AstNode) (len=2) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) YieldExpression,
                                                              Children: ([]phrase.AstNode) (len=3) {
                                                                (*lexer.Token)(Yield 1631 5 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(Whitespace 1636 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                (*phrase.Phrase)({
                                                                  Type: (phrase.PhraseType) ObjectCreationExpression,
                                                                  Children: ([]phrase.AstNode) (len=4) {
                                                                    (*lexer.Token)(New 1637 3 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*lexer.Token)(Whitespace 1640 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) ClassTypeDesignator,
                                                                      Children: ([]phrase.AstNode) (len=1) {
                                                                        (*phrase.Phrase)({
                                                                          Type: (phrase.PhraseType) SimpleVariable,
                                                                          Children: ([]phrase.AstNode) (len=1) {
                                                                            (*lexer.Token)(VariableName 1641 6 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                          }
                                                                        })
                                                                      }
                                                                    }),
                                                                    (*phrase.Phrase)({
                                                                      Type: (phrase.PhraseType) ArgumentExpressionList,
                                                                      Children: ([]phrase.AstNode) (len=2) {
                                                                        (*lexer.Token)(OpenParenthesis 1647 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                                        (*lexer.Token)(CloseParenthesis 1648 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                                      }
                                                                    })
                                                                  }
                                                                })
                                                              }
                                                            }),
                                                            (*lexer.Token)(Semicolon 1649 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(Whitespace 1650 13 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(CloseBrace 1663 1 ModeScripting ModeScripting ModeScripting ModeScripting ModeScripting)
                                                  }
                                                })
                                              }
                                            })
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 1664 9 ModeScripting ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(CloseBrace 1673 1 ModeScripting ModeScripting ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Whitespace 1674 5 ModeScripting ModeScripting ModeScripting),
                            (*lexer.Token)(CloseBrace 1679 1 ModeScripting ModeScripting ModeScripting)
                          }
                        })
                      }
                    })
                  }
                }),
                (*lexer.Token)(Whitespace 1680 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) MethodDeclaration,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationHeader,
                      Children: ([]phrase.AstNode) (len=8) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) MemberModifierList,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Public 1686 6 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(Whitespace 1692 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Function 1693 8 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 1701 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) Identifier,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 1702 13 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(OpenParenthesis 1715 1 ModeScripting ModeScripting),
                        (*lexer.Token)(CloseParenthesis 1716 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ReturnType,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Colon 1717 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 1718 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) TypeDeclaration,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) QualifiedName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) NamespaceName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*lexer.Token)(Name 1719 6 ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                })
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 1725 5 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationBody,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) CompoundStatement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*lexer.Token)(OpenBrace 1730 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 1731 9 ModeScripting ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) StatementList,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ReturnStatement,
                                  Children: ([]phrase.AstNode) (len=4) {
                                    (*lexer.Token)(Return 1740 6 ModeScripting ModeScripting ModeScripting),
                                    (*lexer.Token)(Whitespace 1746 1 ModeScripting ModeScripting ModeScripting),
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) FunctionCallExpression,
                                      Children: ([]phrase.AstNode) (len=2) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) FullyQualifiedName,
                                          Children: ([]phrase.AstNode) (len=2) {
                                            (*lexer.Token)(Backslash 1747 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) NamespaceName,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*lexer.Token)(Name 1748 7 ModeScripting ModeScripting ModeScripting)
                                              }
                                            })
                                          }
                                        }),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                          Children: ([]phrase.AstNode) (len=3) {
                                            (*lexer.Token)(OpenParenthesis 1755 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(DirectoryConstant 1756 7 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(CloseParenthesis 1763 1 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 1764 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Whitespace 1765 5 ModeScripting ModeScripting ModeScripting),
                            (*lexer.Token)(CloseBrace 1770 1 ModeScripting ModeScripting ModeScripting)
                          }
                        })
                      }
                    })
                  }
                }),
                (*lexer.Token)(Whitespace 1771 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) MethodDeclaration,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationHeader,
                      Children: ([]phrase.AstNode) (len=9) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) MemberModifierList,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Protected 1777 9 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(Whitespace 1786 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Function 1787 8 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 1795 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) Identifier,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 1796 18 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(OpenParenthesis 1814 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ParameterDeclarationList,
                          Children: ([]phrase.AstNode) (len=4) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) TypeDeclaration,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 1815 16 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 1831 1 ModeScripting ModeScripting),
                                (*lexer.Token)(VariableName 1832 10 ModeScripting ModeScripting)
                              }
                            }),
                            (*lexer.Token)(Comma 1842 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 1843 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) TypeDeclaration,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 1844 15 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 1859 1 ModeScripting ModeScripting),
                                (*lexer.Token)(VariableName 1860 7 ModeScripting ModeScripting)
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(CloseParenthesis 1867 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ReturnType,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Colon 1868 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 1869 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) TypeDeclaration,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) QualifiedName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) NamespaceName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*lexer.Token)(Name 1870 4 ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                })
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 1874 5 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationBody,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) CompoundStatement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*lexer.Token)(OpenBrace 1879 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 1880 9 ModeScripting ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) StatementList,
                              Children: ([]phrase.AstNode) (len=13) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) MethodCallExpression,
                                      Children: ([]phrase.AstNode) (len=4) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 1889 10 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Arrow 1899 2 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) MemberName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 1901 11 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                          }
                                        }),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                          Children: ([]phrase.AstNode) (len=3) {
                                            (*lexer.Token)(OpenParenthesis 1912 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ObjectCreationExpression,
                                              Children: ([]phrase.AstNode) (len=4) {
                                                (*lexer.Token)(New 1913 3 ModeScripting ModeScripting ModeScripting),
                                                (*lexer.Token)(Whitespace 1916 1 ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ClassTypeDesignator,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) QualifiedName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) NamespaceName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 1917 12 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    })
                                                  }
                                                }),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ArgumentExpressionList,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*lexer.Token)(OpenParenthesis 1929 1 ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) AdditiveExpression,
                                                      Children: ([]phrase.AstNode) (len=3) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) MethodCallExpression,
                                                          Children: ([]phrase.AstNode) (len=4) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 1930 5 ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Arrow 1935 2 ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) MemberName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 1937 13 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                                              }
                                                            }),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) ArgumentExpressionList,
                                                              Children: ([]phrase.AstNode) (len=2) {
                                                                (*lexer.Token)(OpenParenthesis 1950 1 ModeScripting ModeScripting ModeScripting),
                                                                (*lexer.Token)(CloseParenthesis 1951 1 ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            })
                                                          }
                                                        }),
                                                        (*lexer.Token)(Dot 1952 1 ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(StringLiteral 1953 21 ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(CloseParenthesis 1974 1 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(CloseParenthesis 1975 1 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 1976 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 1977 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) MethodCallExpression,
                                      Children: ([]phrase.AstNode) (len=4) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 1986 10 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Arrow 1996 2 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) MemberName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 1998 12 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                          }
                                        }),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                          Children: ([]phrase.AstNode) (len=6) {
                                            (*lexer.Token)(OpenParenthesis 2010 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2011 38 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Comma 2049 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 2050 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) ConstantAccessExpression,
                                              Children: ([]phrase.AstNode) (len=1) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) QualifiedName,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) NamespaceName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(Name 2051 4 ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    })
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(CloseParenthesis 2055 1 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 2056 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2057 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) SimpleAssignmentExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 2066 8 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 2074 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Equals 2075 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 2076 1 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) AdditiveExpression,
                                          Children: ([]phrase.AstNode) (len=3) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) MethodCallExpression,
                                              Children: ([]phrase.AstNode) (len=4) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) SimpleVariable,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*lexer.Token)(VariableName 2077 5 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Arrow 2082 2 ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) MemberName,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*lexer.Token)(Name 2084 13 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                                  }
                                                }),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ArgumentExpressionList,
                                                  Children: ([]phrase.AstNode) (len=2) {
                                                    (*lexer.Token)(OpenParenthesis 2097 1 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(CloseParenthesis 2098 1 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(Dot 2099 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2100 9 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 2109 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2110 10 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) MethodCallExpression,
                                      Children: ([]phrase.AstNode) (len=4) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 2120 7 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Arrow 2127 2 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) MemberName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 2129 4 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                          }
                                        }),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                          Children: ([]phrase.AstNode) (len=6) {
                                            (*lexer.Token)(OpenParenthesis 2133 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) AdditiveExpression,
                                              Children: ([]phrase.AstNode) (len=3) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(VariableName 2134 8 ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Dot 2142 1 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(StringLiteral 2143 15 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Dot 2158 1 ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ClassConstantAccessExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) QualifiedName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) NamespaceName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2159 4 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(ColonColon 2163 2 ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ScopedMemberName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) Identifier,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2165 11 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    })
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(Comma 2176 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 2177 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2178 6 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(CloseParenthesis 2184 1 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 2185 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2186 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) MethodCallExpression,
                                      Children: ([]phrase.AstNode) (len=4) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 2195 7 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Arrow 2202 2 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) MemberName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 2204 4 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                          }
                                        }),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                          Children: ([]phrase.AstNode) (len=6) {
                                            (*lexer.Token)(OpenParenthesis 2208 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) AdditiveExpression,
                                              Children: ([]phrase.AstNode) (len=3) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) AdditiveExpression,
                                                      Children: ([]phrase.AstNode) (len=3) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) AdditiveExpression,
                                                          Children: ([]phrase.AstNode) (len=3) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 2209 8 ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Dot 2217 1 ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(StringLiteral 2218 14 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        }),
                                                        (*lexer.Token)(Dot 2232 1 ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) PropertyAccessExpression,
                                                          Children: ([]phrase.AstNode) (len=3) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 2233 5 ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Arrow 2238 2 ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) MemberName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 2240 11 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                                              }
                                                            })
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(Dot 2251 1 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(StringLiteral 2252 7 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Dot 2259 1 ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ClassConstantAccessExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) QualifiedName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) NamespaceName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2260 4 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(ColonColon 2264 2 ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ScopedMemberName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) Identifier,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2266 11 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    })
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(Comma 2277 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 2278 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2279 6 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(CloseParenthesis 2285 1 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 2286 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2287 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) MethodCallExpression,
                                      Children: ([]phrase.AstNode) (len=4) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 2296 7 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Arrow 2303 2 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) MemberName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 2305 4 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                          }
                                        }),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                          Children: ([]phrase.AstNode) (len=6) {
                                            (*lexer.Token)(OpenParenthesis 2309 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) AdditiveExpression,
                                              Children: ([]phrase.AstNode) (len=3) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(VariableName 2310 8 ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Dot 2318 1 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(StringLiteral 2319 13 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Dot 2332 1 ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ClassConstantAccessExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) QualifiedName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) NamespaceName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2333 4 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(ColonColon 2337 2 ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ScopedMemberName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) Identifier,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2339 11 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    })
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(Comma 2350 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 2351 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2352 6 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(CloseParenthesis 2358 1 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 2359 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2360 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) MethodCallExpression,
                                      Children: ([]phrase.AstNode) (len=4) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 2369 7 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Arrow 2376 2 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) MemberName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 2378 4 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                          }
                                        }),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                          Children: ([]phrase.AstNode) (len=6) {
                                            (*lexer.Token)(OpenParenthesis 2382 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) AdditiveExpression,
                                              Children: ([]phrase.AstNode) (len=3) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) AdditiveExpression,
                                                      Children: ([]phrase.AstNode) (len=3) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) SimpleVariable,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(VariableName 2383 8 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        }),
                                                        (*lexer.Token)(Dot 2391 1 ModeScripting ModeScripting ModeScripting),
                                                        (*lexer.Token)(StringLiteral 2392 14 ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Dot 2406 1 ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) PropertyAccessExpression,
                                                      Children: ([]phrase.AstNode) (len=3) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) SimpleVariable,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(VariableName 2407 5 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        }),
                                                        (*lexer.Token)(Arrow 2412 2 ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) MemberName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2414 11 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                                          }
                                                        })
                                                      }
                                                    })
                                                  }
                                                }),
                                                (*lexer.Token)(Dot 2425 1 ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ClassConstantAccessExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) QualifiedName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) NamespaceName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2426 4 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(ColonColon 2430 2 ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ScopedMemberName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) Identifier,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2432 11 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    })
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(Comma 2443 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 2444 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2445 6 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(CloseParenthesis 2451 1 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 2452 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Whitespace 2453 5 ModeScripting ModeScripting ModeScripting),
                            (*lexer.Token)(CloseBrace 2458 1 ModeScripting ModeScripting ModeScripting)
                          }
                        })
                      }
                    })
                  }
                }),
                (*lexer.Token)(Whitespace 2459 6 ModeScripting ModeScripting),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) MethodDeclaration,
                  Children: ([]phrase.AstNode) (len=3) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationHeader,
                      Children: ([]phrase.AstNode) (len=9) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) MemberModifierList,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Protected 2465 9 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(Whitespace 2474 1 ModeScripting ModeScripting),
                        (*lexer.Token)(Function 2475 8 ModeScripting ModeScripting),
                        (*lexer.Token)(Whitespace 2483 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) Identifier,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(Name 2484 15 ModeScripting ModeScripting)
                          }
                        }),
                        (*lexer.Token)(OpenParenthesis 2499 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ParameterDeclarationList,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) ParameterDeclaration,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) TypeDeclaration,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) QualifiedName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) NamespaceName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 2500 22 ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    })
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2522 1 ModeScripting ModeScripting),
                                (*lexer.Token)(VariableName 2523 7 ModeScripting ModeScripting)
                              }
                            })
                          }
                        }),
                        (*lexer.Token)(CloseParenthesis 2530 1 ModeScripting ModeScripting),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ReturnType,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(Colon 2531 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 2532 1 ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) TypeDeclaration,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) QualifiedName,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) NamespaceName,
                                      Children: ([]phrase.AstNode) (len=1) {
                                        (*lexer.Token)(Name 2533 4 ModeScripting ModeScripting)
                                      }
                                    })
                                  }
                                })
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 2537 5 ModeScripting ModeScripting),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) MethodDeclarationBody,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) CompoundStatement,
                          Children: ([]phrase.AstNode) (len=5) {
                            (*lexer.Token)(OpenBrace 2542 1 ModeScripting ModeScripting),
                            (*lexer.Token)(Whitespace 2543 9 ModeScripting ModeScripting ModeScripting),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) StatementList,
                              Children: ([]phrase.AstNode) (len=7) {
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) SimpleAssignmentExpression,
                                      Children: ([]phrase.AstNode) (len=5) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 2552 8 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Whitespace 2560 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Equals 2561 1 ModeScripting ModeScripting ModeScripting),
                                        (*lexer.Token)(Whitespace 2562 1 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) AdditiveExpression,
                                          Children: ([]phrase.AstNode) (len=3) {
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) MethodCallExpression,
                                              Children: ([]phrase.AstNode) (len=4) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) SimpleVariable,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*lexer.Token)(VariableName 2563 5 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Arrow 2568 2 ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) MemberName,
                                                  Children: ([]phrase.AstNode) (len=1) {
                                                    (*lexer.Token)(Name 2570 13 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                                  }
                                                }),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ArgumentExpressionList,
                                                  Children: ([]phrase.AstNode) (len=2) {
                                                    (*lexer.Token)(OpenParenthesis 2583 1 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(CloseParenthesis 2584 1 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(Dot 2585 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2586 9 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 2595 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2596 10 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) MethodCallExpression,
                                      Children: ([]phrase.AstNode) (len=4) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 2606 7 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Arrow 2613 2 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) MemberName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 2615 6 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                          }
                                        }),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                          Children: ([]phrase.AstNode) (len=9) {
                                            (*lexer.Token)(OpenParenthesis 2621 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) AdditiveExpression,
                                              Children: ([]phrase.AstNode) (len=3) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) AdditiveExpression,
                                                      Children: ([]phrase.AstNode) (len=3) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) AdditiveExpression,
                                                          Children: ([]phrase.AstNode) (len=3) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 2622 8 ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Dot 2630 1 ModeScripting ModeScripting ModeScripting),
                                                            (*lexer.Token)(StringLiteral 2631 12 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        }),
                                                        (*lexer.Token)(Dot 2643 1 ModeScripting ModeScripting ModeScripting),
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) PropertyAccessExpression,
                                                          Children: ([]phrase.AstNode) (len=3) {
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) SimpleVariable,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(VariableName 2644 5 ModeScripting ModeScripting ModeScripting)
                                                              }
                                                            }),
                                                            (*lexer.Token)(Arrow 2649 2 ModeScripting ModeScripting ModeScripting),
                                                            (*phrase.Phrase)({
                                                              Type: (phrase.PhraseType) MemberName,
                                                              Children: ([]phrase.AstNode) (len=1) {
                                                                (*lexer.Token)(Name 2651 11 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                                              }
                                                            })
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(Dot 2662 1 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(StringLiteral 2663 7 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Dot 2670 1 ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ClassConstantAccessExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) QualifiedName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) NamespaceName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2671 4 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(ColonColon 2675 2 ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ScopedMemberName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) Identifier,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2677 11 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    })
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(Comma 2688 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 2689 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2690 3 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Comma 2693 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 2694 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2695 6 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(CloseParenthesis 2701 1 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 2702 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2703 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) MethodCallExpression,
                                      Children: ([]phrase.AstNode) (len=4) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 2712 7 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Arrow 2719 2 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) MemberName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 2721 6 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                          }
                                        }),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                          Children: ([]phrase.AstNode) (len=9) {
                                            (*lexer.Token)(OpenParenthesis 2727 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) AdditiveExpression,
                                              Children: ([]phrase.AstNode) (len=3) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(VariableName 2728 8 ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Dot 2736 1 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(StringLiteral 2737 13 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Dot 2750 1 ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ClassConstantAccessExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) QualifiedName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) NamespaceName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2751 4 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(ColonColon 2755 2 ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ScopedMemberName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) Identifier,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2757 11 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    })
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(Comma 2768 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 2769 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2770 3 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Comma 2773 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 2774 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2775 6 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(CloseParenthesis 2781 1 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 2782 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                }),
                                (*lexer.Token)(Whitespace 2783 9 ModeScripting ModeScripting ModeScripting),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) ExpressionStatement,
                                  Children: ([]phrase.AstNode) (len=2) {
                                    (*phrase.Phrase)({
                                      Type: (phrase.PhraseType) MethodCallExpression,
                                      Children: ([]phrase.AstNode) (len=4) {
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) SimpleVariable,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(VariableName 2792 7 ModeScripting ModeScripting ModeScripting)
                                          }
                                        }),
                                        (*lexer.Token)(Arrow 2799 2 ModeScripting ModeScripting ModeScripting),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) MemberName,
                                          Children: ([]phrase.AstNode) (len=1) {
                                            (*lexer.Token)(Name 2801 6 ModeScripting ModeScripting ModeScripting ModeLookingForProperty)
                                          }
                                        }),
                                        (*phrase.Phrase)({
                                          Type: (phrase.PhraseType) ArgumentExpressionList,
                                          Children: ([]phrase.AstNode) (len=9) {
                                            (*lexer.Token)(OpenParenthesis 2807 1 ModeScripting ModeScripting ModeScripting),
                                            (*phrase.Phrase)({
                                              Type: (phrase.PhraseType) AdditiveExpression,
                                              Children: ([]phrase.AstNode) (len=3) {
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) AdditiveExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) SimpleVariable,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*lexer.Token)(VariableName 2808 8 ModeScripting ModeScripting ModeScripting)
                                                      }
                                                    }),
                                                    (*lexer.Token)(Dot 2816 1 ModeScripting ModeScripting ModeScripting),
                                                    (*lexer.Token)(StringLiteral 2817 11 ModeScripting ModeScripting ModeScripting)
                                                  }
                                                }),
                                                (*lexer.Token)(Dot 2828 1 ModeScripting ModeScripting ModeScripting),
                                                (*phrase.Phrase)({
                                                  Type: (phrase.PhraseType) ClassConstantAccessExpression,
                                                  Children: ([]phrase.AstNode) (len=3) {
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) QualifiedName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) NamespaceName,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2829 4 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    }),
                                                    (*lexer.Token)(ColonColon 2833 2 ModeScripting ModeScripting ModeScripting),
                                                    (*phrase.Phrase)({
                                                      Type: (phrase.PhraseType) ScopedMemberName,
                                                      Children: ([]phrase.AstNode) (len=1) {
                                                        (*phrase.Phrase)({
                                                          Type: (phrase.PhraseType) Identifier,
                                                          Children: ([]phrase.AstNode) (len=1) {
                                                            (*lexer.Token)(Name 2835 11 ModeScripting ModeScripting ModeScripting)
                                                          }
                                                        })
                                                      }
                                                    })
                                                  }
                                                })
                                              }
                                            }),
                                            (*lexer.Token)(Comma 2846 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 2847 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2848 3 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Comma 2851 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(Whitespace 2852 1 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(StringLiteral 2853 6 ModeScripting ModeScripting ModeScripting),
                                            (*lexer.Token)(CloseParenthesis 2859 1 ModeScripting ModeScripting ModeScripting)
                                          }
                                        })
                                      }
                                    }),
                                    (*lexer.Token)(Semicolon 2860 1 ModeScripting ModeScripting ModeScripting)
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(Whitespace 2861 5 ModeScripting ModeScripting ModeScripting),
                            (*lexer.Token)(CloseBrace 2866 1 ModeScripting ModeScripting ModeScripting)
                          }
                        })
                      }
                    })
                  }
                })
              }
            }),
            (*lexer.Token)(Whitespace 2867 1 ModeScripting ModeScripting),
            (*lexer.Token)(CloseBrace 2868 1 ModeScripting ModeScripting)
          }
        })
      }
    }),
    (*lexer.Token)(Whitespace 2869 1 ModeScripting)
  }
})
