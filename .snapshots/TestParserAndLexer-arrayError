([]*lexer.Token) (len=13) {
  (*lexer.Token)(OpenTag 0 6),
  (*lexer.Token)(VariableName 6 6),
  (*lexer.Token)(Whitespace 12 1),
  (*lexer.Token)(Equals 13 1),
  (*lexer.Token)(Whitespace 14 1),
  (*lexer.Token)(OpenBracket 15 1),
  (*lexer.Token)(StringLiteral 16 3),
  (*lexer.Token)(StringLiteral 19 3),
  (*lexer.Token)(Comma 22 1),
  (*lexer.Token)(StringLiteral 23 3),
  (*lexer.Token)(CloseBracket 26 1),
  (*lexer.Token)(Semicolon 27 1),
  (*lexer.Token)(EndOfFile 28 0)
}
(*phrase.Phrase)({
  Type: (phrase.PhraseType) StatementList,
  Children: ([]phrase.AstNode) (len=2) {
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) InlineText,
      Children: ([]phrase.AstNode) (len=1) {
        (*lexer.Token)(OpenTag 0 6)
      }
    }),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) ExpressionStatement,
      Children: ([]phrase.AstNode) (len=2) {
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) SimpleAssignmentExpression,
          Children: ([]phrase.AstNode) (len=5) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) SimpleVariable,
              Children: ([]phrase.AstNode) (len=1) {
                (*lexer.Token)(VariableName 6 6)
              }
            }),
            (*lexer.Token)(Whitespace 12 1),
            (*lexer.Token)(Equals 13 1),
            (*lexer.Token)(Whitespace 14 1),
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) ArrayCreationExpression,
              Children: ([]phrase.AstNode) (len=3) {
                (*lexer.Token)(OpenBracket 15 1),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) ArrayInitialiserList,
                  Children: ([]phrase.AstNode) (len=5) {
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) ArrayElement,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ArrayValue,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(StringLiteral 16 3)
                          }
                        })
                      }
                    }),
                    (*phrase.ParseError)({
                      Phrase: (phrase.Phrase) {
                        Type: (phrase.PhraseType) Error,
                        Children: ([]phrase.AstNode) {
                        }
                      },
                      Unexpected: (*lexer.Token)(StringLiteral 19 3),
                      Expected: (lexer.TokenType) 
                    }),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) ArrayElement,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ArrayValue,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(StringLiteral 19 3)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Comma 22 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) ArrayElement,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) ArrayValue,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(StringLiteral 23 3)
                          }
                        })
                      }
                    })
                  }
                }),
                (*lexer.Token)(CloseBracket 26 1)
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 27 1)
      }
    })
  }
})
