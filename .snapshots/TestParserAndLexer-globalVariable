([]struct { Type parser.TokenType; Offset int; Length int }) (len=26) {
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) OpenTag,
    Offset: (int) 0,
    Length: (int) 7
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 7,
    Length: (int) 2
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) DocumentComment,
    Offset: (int) 9,
    Length: (int) 40
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 49,
    Length: (int) 2
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Global,
    Offset: (int) 51,
    Length: (int) 6
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 57,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) VariableName,
    Offset: (int) 58,
    Length: (int) 3
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Semicolon,
    Offset: (int) 61,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 62,
    Length: (int) 4
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Global,
    Offset: (int) 66,
    Length: (int) 6
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 72,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) VariableName,
    Offset: (int) 73,
    Length: (int) 7
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Semicolon,
    Offset: (int) 80,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 81,
    Length: (int) 4
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) VariableName,
    Offset: (int) 85,
    Length: (int) 7
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 92,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Equals,
    Offset: (int) 93,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 94,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) New,
    Offset: (int) 95,
    Length: (int) 3
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 98,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Name,
    Offset: (int) 99,
    Length: (int) 15
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) OpenParenthesis,
    Offset: (int) 114,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) CloseParenthesis,
    Offset: (int) 115,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Semicolon,
    Offset: (int) 116,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 117,
    Length: (int) 2
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) EndOfFile,
    Offset: (int) 119,
    Length: (int) 0
  }
}
(*parser.Phrase)({
  Type: (parser.PhraseType) StatementList,
  Children: ([]parser.AstNode) (len=10) {
    (*parser.Phrase)({
      Type: (parser.PhraseType) InlineText,
      Children: ([]parser.AstNode) (len=1) {
        (*parser.Token)(OpenTag 0 7 ModeInitial)
      }
    }),
    (*parser.Token)(Whitespace 7 2 ModeScripting),
    (*parser.Token)(DocumentComment 9 40 ModeScripting),
    (*parser.Token)(Whitespace 49 2 ModeScripting),
    (*parser.Phrase)({
      Type: (parser.PhraseType) GlobalDeclaration,
      Children: ([]parser.AstNode) (len=4) {
        (*parser.Token)(Global 51 6 ModeScripting),
        (*parser.Token)(Whitespace 57 1 ModeScripting),
        (*parser.Phrase)({
          Type: (parser.PhraseType) VariableNameList,
          Children: ([]parser.AstNode) (len=1) {
            (*parser.Phrase)({
              Type: (parser.PhraseType) SimpleVariable,
              Children: ([]parser.AstNode) (len=1) {
                (*parser.Token)(VariableName 58 3 ModeScripting)
              }
            })
          }
        }),
        (*parser.Token)(Semicolon 61 1 ModeScripting)
      }
    }),
    (*parser.Token)(Whitespace 62 4 ModeScripting),
    (*parser.Phrase)({
      Type: (parser.PhraseType) GlobalDeclaration,
      Children: ([]parser.AstNode) (len=4) {
        (*parser.Token)(Global 66 6 ModeScripting),
        (*parser.Token)(Whitespace 72 1 ModeScripting),
        (*parser.Phrase)({
          Type: (parser.PhraseType) VariableNameList,
          Children: ([]parser.AstNode) (len=1) {
            (*parser.Phrase)({
              Type: (parser.PhraseType) SimpleVariable,
              Children: ([]parser.AstNode) (len=1) {
                (*parser.Token)(VariableName 73 7 ModeScripting)
              }
            })
          }
        }),
        (*parser.Token)(Semicolon 80 1 ModeScripting)
      }
    }),
    (*parser.Token)(Whitespace 81 4 ModeScripting),
    (*parser.Phrase)({
      Type: (parser.PhraseType) ExpressionStatement,
      Children: ([]parser.AstNode) (len=2) {
        (*parser.Phrase)({
          Type: (parser.PhraseType) SimpleAssignmentExpression,
          Children: ([]parser.AstNode) (len=5) {
            (*parser.Phrase)({
              Type: (parser.PhraseType) SimpleVariable,
              Children: ([]parser.AstNode) (len=1) {
                (*parser.Token)(VariableName 85 7 ModeScripting)
              }
            }),
            (*parser.Token)(Whitespace 92 1 ModeScripting),
            (*parser.Token)(Equals 93 1 ModeScripting),
            (*parser.Token)(Whitespace 94 1 ModeScripting),
            (*parser.Phrase)({
              Type: (parser.PhraseType) ObjectCreationExpression,
              Children: ([]parser.AstNode) (len=5) {
                (*parser.Token)(New 95 3 ModeScripting),
                (*parser.Token)(Whitespace 98 1 ModeScripting),
                (*parser.Phrase)({
                  Type: (parser.PhraseType) ClassTypeDesignator,
                  Children: ([]parser.AstNode) (len=1) {
                    (*parser.Phrase)({
                      Type: (parser.PhraseType) QualifiedName,
                      Children: ([]parser.AstNode) (len=1) {
                        (*parser.Phrase)({
                          Type: (parser.PhraseType) NamespaceName,
                          Children: ([]parser.AstNode) (len=1) {
                            (*parser.Token)(Name 99 15 ModeScripting)
                          }
                        })
                      }
                    })
                  }
                }),
                (*parser.Token)(OpenParenthesis 114 1 ModeScripting),
                (*parser.Token)(CloseParenthesis 115 1 ModeScripting)
              }
            })
          }
        }),
        (*parser.Token)(Semicolon 116 1 ModeScripting)
      }
    }),
    (*parser.Token)(Whitespace 117 2 ModeScripting)
  }
})
