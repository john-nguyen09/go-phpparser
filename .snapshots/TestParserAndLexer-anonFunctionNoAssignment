([]struct { Type parser.TokenType; Offset int; Length int }) (len=11) {
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) OpenTag,
    Offset: (int) 0,
    Length: (int) 6
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Function,
    Offset: (int) 6,
    Length: (int) 8
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 14,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) OpenParenthesis,
    Offset: (int) 15,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) CloseParenthesis,
    Offset: (int) 16,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 17,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) OpenBrace,
    Offset: (int) 18,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Whitespace,
    Offset: (int) 19,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) CloseBrace,
    Offset: (int) 20,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) Semicolon,
    Offset: (int) 21,
    Length: (int) 1
  },
  (struct { Type parser.TokenType; Offset int; Length int }) {
    Type: (parser.TokenType) EndOfFile,
    Offset: (int) 22,
    Length: (int) 0
  }
}
(*parser.Phrase)({
  Type: (parser.PhraseType) StatementList,
  Children: ([]parser.AstNode) (len=2) {
    (*parser.Phrase)({
      Type: (parser.PhraseType) InlineText,
      Children: ([]parser.AstNode) (len=1) {
        (*parser.Token)(OpenTag 0 6 ModeInitial)
      }
    }),
    (*parser.Phrase)({
      Type: (parser.PhraseType) ExpressionStatement,
      Children: ([]parser.AstNode) (len=2) {
        (*parser.Phrase)({
          Type: (parser.PhraseType) AnonymousFunctionCreationExpression,
          Children: ([]parser.AstNode) (len=3) {
            (*parser.Phrase)({
              Type: (parser.PhraseType) AnonymousFunctionHeader,
              Children: ([]parser.AstNode) (len=4) {
                (*parser.Token)(Function 6 8 ModeScripting),
                (*parser.Token)(Whitespace 14 1 ModeScripting),
                (*parser.Token)(OpenParenthesis 15 1 ModeScripting),
                (*parser.Token)(CloseParenthesis 16 1 ModeScripting)
              }
            }),
            (*parser.Token)(Whitespace 17 1 ModeScripting),
            (*parser.Phrase)({
              Type: (parser.PhraseType) FunctionDeclarationBody,
              Children: ([]parser.AstNode) (len=3) {
                (*parser.Token)(OpenBrace 18 1 ModeScripting),
                (*parser.Token)(Whitespace 19 1 ModeScripting ModeScripting),
                (*parser.Token)(CloseBrace 20 1 ModeScripting ModeScripting)
              }
            })
          }
        }),
        (*parser.Token)(Semicolon 21 1 ModeScripting)
      }
    })
  }
})
