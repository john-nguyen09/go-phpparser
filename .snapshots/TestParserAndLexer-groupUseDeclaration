([]*lexer.Token) (len=14) {
  (*lexer.Token)(OpenTag 0 6),
  (*lexer.Token)(Use 6 3),
  (*lexer.Token)(Whitespace 9 1),
  (*lexer.Token)(Name 10 3),
  (*lexer.Token)(Backslash 13 1),
  (*lexer.Token)(Name 14 3),
  (*lexer.Token)(Backslash 17 1),
  (*lexer.Token)(OpenBrace 18 1),
  (*lexer.Token)(Whitespace 19 5),
  (*lexer.Token)(Name 24 3),
  (*lexer.Token)(Whitespace 27 1),
  (*lexer.Token)(CloseBrace 28 1),
  (*lexer.Token)(Semicolon 29 1),
  (*lexer.Token)(EndOfFile 30 0)
}
(*phrase.Phrase)({
  Type: (phrase.PhraseType) StatementList,
  Children: ([]phrase.AstNode) (len=2) {
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) InlineText,
      Children: ([]phrase.AstNode) (len=1) {
        (*lexer.Token)(OpenTag 0 6)
      }
    }),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) NamespaceUseDeclaration,
      Children: ([]phrase.AstNode) (len=10) {
        (*lexer.Token)(Use 6 3),
        (*lexer.Token)(Whitespace 9 1),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceName,
          Children: ([]phrase.AstNode) (len=3) {
            (*lexer.Token)(Name 10 3),
            (*lexer.Token)(Backslash 13 1),
            (*lexer.Token)(Name 14 3)
          }
        }),
        (*lexer.Token)(Backslash 17 1),
        (*lexer.Token)(OpenBrace 18 1),
        (*lexer.Token)(Whitespace 19 5),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) NamespaceUseGroupClauseList,
          Children: ([]phrase.AstNode) (len=1) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) NamespaceUseGroupClause,
              Children: ([]phrase.AstNode) (len=1) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) NamespaceName,
                  Children: ([]phrase.AstNode) (len=1) {
                    (*lexer.Token)(Name 24 3)
                  }
                })
              }
            })
          }
        }),
        (*lexer.Token)(Whitespace 27 1),
        (*lexer.Token)(CloseBrace 28 1),
        (*lexer.Token)(Semicolon 29 1)
      }
    })
  }
})
