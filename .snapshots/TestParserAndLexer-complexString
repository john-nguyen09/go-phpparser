([]*lexer.Token) (len=17) {
  (*lexer.Token)(OpenTag 0 6),
  (*lexer.Token)(Whitespace 6 4),
  (*lexer.Token)(VariableName 10 4),
  (*lexer.Token)(Whitespace 14 1),
  (*lexer.Token)(Equals 15 1),
  (*lexer.Token)(Whitespace 16 1),
  (*lexer.Token)(DoubleQuote 17 1),
  (*lexer.Token)(EncapsulatedAndWhitespace 18 6),
  (*lexer.Token)(DollarCurlyOpen 24 2),
  (*lexer.Token)(DoubleQuote 26 1),
  (*lexer.Token)(EncapsulatedAndWhitespace 27 4),
  (*lexer.Token)(VariableName 31 2),
  (*lexer.Token)(DoubleQuote 33 1),
  (*lexer.Token)(CloseBrace 34 1),
  (*lexer.Token)(DoubleQuote 35 1),
  (*lexer.Token)(Semicolon 36 1),
  (*lexer.Token)(EndOfFile 37 0)
}
(*phrase.Phrase)({
  Type: (phrase.PhraseType) StatementList,
  Children: ([]phrase.AstNode) (len=3) {
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) InlineText,
      Children: ([]phrase.AstNode) (len=1) {
        (*lexer.Token)(OpenTag 0 6)
      }
    }),
    (*lexer.Token)(Whitespace 6 4),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) ExpressionStatement,
      Children: ([]phrase.AstNode) (len=2) {
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) SimpleAssignmentExpression,
          Children: ([]phrase.AstNode) (len=5) {
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) SimpleVariable,
              Children: ([]phrase.AstNode) (len=1) {
                (*lexer.Token)(VariableName 10 4)
              }
            }),
            (*lexer.Token)(Whitespace 14 1),
            (*lexer.Token)(Equals 15 1),
            (*lexer.Token)(Whitespace 16 1),
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) DoubleQuotedStringLiteral,
              Children: ([]phrase.AstNode) (len=3) {
                (*lexer.Token)(DoubleQuote 17 1),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) EncapsulatedVariableList,
                  Children: ([]phrase.AstNode) (len=2) {
                    (*lexer.Token)(EncapsulatedAndWhitespace 18 6),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) EncapsulatedVariable,
                      Children: ([]phrase.AstNode) (len=3) {
                        (*lexer.Token)(DollarCurlyOpen 24 2),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) DoubleQuotedStringLiteral,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(DoubleQuote 26 1),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) EncapsulatedVariableList,
                              Children: ([]phrase.AstNode) (len=2) {
                                (*lexer.Token)(EncapsulatedAndWhitespace 27 4),
                                (*phrase.Phrase)({
                                  Type: (phrase.PhraseType) SimpleVariable,
                                  Children: ([]phrase.AstNode) (len=1) {
                                    (*lexer.Token)(VariableName 31 2)
                                  }
                                })
                              }
                            }),
                            (*lexer.Token)(DoubleQuote 33 1)
                          }
                        }),
                        (*lexer.Token)(CloseBrace 34 1)
                      }
                    })
                  }
                }),
                (*lexer.Token)(DoubleQuote 35 1)
              }
            })
          }
        }),
        (*lexer.Token)(Semicolon 36 1)
      }
    })
  }
})
