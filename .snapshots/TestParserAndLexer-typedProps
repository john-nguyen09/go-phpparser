([]struct { Type lexer.TokenType; Offset int; Length int }) (len=57) {
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenTag,
    Offset: (int) 0,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 7,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Class,
    Offset: (int) 9,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 14,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 15,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 18,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) OpenBrace,
    Offset: (int) 19,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 20,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Public,
    Offset: (int) 26,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 32,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 33,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 36,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 37,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 39,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 40,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Public,
    Offset: (int) 48,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 54,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Question,
    Offset: (int) 55,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 56,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 62,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 63,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 65,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 66,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 67,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 68,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 73,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 74,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Private,
    Offset: (int) 82,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 89,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 90,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 93,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 94,
    Length: (int) 5
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 99,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 100,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Protected,
    Offset: (int) 108,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 117,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Static,
    Offset: (int) 118,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 124,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 125,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 131,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 132,
    Length: (int) 7
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 139,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Equals,
    Offset: (int) 140,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 141,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) StringLiteral,
    Offset: (int) 142,
    Length: (int) 9
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 151,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 152,
    Length: (int) 8
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Var,
    Offset: (int) 160,
    Length: (int) 3
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 163,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Name,
    Offset: (int) 164,
    Length: (int) 6
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 170,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) VariableName,
    Offset: (int) 171,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Semicolon,
    Offset: (int) 173,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 174,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) CloseBrace,
    Offset: (int) 176,
    Length: (int) 1
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) Whitespace,
    Offset: (int) 177,
    Length: (int) 2
  },
  (struct { Type lexer.TokenType; Offset int; Length int }) {
    Type: (lexer.TokenType) EndOfFile,
    Offset: (int) 179,
    Length: (int) 0
  }
}
(*phrase.Phrase)({
  Type: (phrase.PhraseType) StatementList,
  Children: ([]phrase.AstNode) (len=4) {
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) InlineText,
      Children: ([]phrase.AstNode) (len=1) {
        (*lexer.Token)(OpenTag 0 7)
      }
    }),
    (*lexer.Token)(Whitespace 7 2),
    (*phrase.Phrase)({
      Type: (phrase.PhraseType) ClassDeclaration,
      Children: ([]phrase.AstNode) (len=3) {
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) ClassDeclarationHeader,
          Children: ([]phrase.AstNode) (len=3) {
            (*lexer.Token)(Class 9 5),
            (*lexer.Token)(Whitespace 14 1),
            (*lexer.Token)(Name 15 3)
          }
        }),
        (*lexer.Token)(Whitespace 18 1),
        (*phrase.Phrase)({
          Type: (phrase.PhraseType) ClassDeclarationBody,
          Children: ([]phrase.AstNode) (len=5) {
            (*lexer.Token)(OpenBrace 19 1),
            (*lexer.Token)(Whitespace 20 6),
            (*phrase.Phrase)({
              Type: (phrase.PhraseType) ClassMemberDeclarationList,
              Children: ([]phrase.AstNode) (len=9) {
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) PropertyDeclaration,
                  Children: ([]phrase.AstNode) (len=5) {
                    (*lexer.Token)(Whitespace 32 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) TypeDeclaration,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) QualifiedName,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) NamespaceName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 33 3)
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 36 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) PropertyElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) PropertyElement,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(VariableName 37 2)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 39 1)
                  }
                }),
                (*lexer.Token)(Whitespace 40 8),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) PropertyDeclaration,
                  Children: ([]phrase.AstNode) (len=5) {
                    (*lexer.Token)(Whitespace 54 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) TypeDeclaration,
                      Children: ([]phrase.AstNode) (len=2) {
                        (*lexer.Token)(Question 55 1),
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) QualifiedName,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) NamespaceName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 56 6)
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 62 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) PropertyElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) PropertyElement,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(VariableName 63 2),
                            (*lexer.Token)(Whitespace 65 1),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) PropertyInitialiser,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*lexer.Token)(Equals 66 1),
                                (*lexer.Token)(Whitespace 67 1),
                                (*lexer.Token)(StringLiteral 68 5)
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 73 1)
                  }
                }),
                (*lexer.Token)(Whitespace 74 8),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) PropertyDeclaration,
                  Children: ([]phrase.AstNode) (len=5) {
                    (*lexer.Token)(Whitespace 89 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) TypeDeclaration,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) QualifiedName,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) NamespaceName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 90 3)
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 93 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) PropertyElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) PropertyElement,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(VariableName 94 5)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 99 1)
                  }
                }),
                (*lexer.Token)(Whitespace 100 8),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) PropertyDeclaration,
                  Children: ([]phrase.AstNode) (len=5) {
                    (*lexer.Token)(Whitespace 124 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) TypeDeclaration,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) QualifiedName,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) NamespaceName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 125 6)
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 131 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) PropertyElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) PropertyElement,
                          Children: ([]phrase.AstNode) (len=3) {
                            (*lexer.Token)(VariableName 132 7),
                            (*lexer.Token)(Whitespace 139 1),
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) PropertyInitialiser,
                              Children: ([]phrase.AstNode) (len=3) {
                                (*lexer.Token)(Equals 140 1),
                                (*lexer.Token)(Whitespace 141 1),
                                (*lexer.Token)(StringLiteral 142 9)
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 151 1)
                  }
                }),
                (*lexer.Token)(Whitespace 152 8),
                (*phrase.Phrase)({
                  Type: (phrase.PhraseType) PropertyDeclaration,
                  Children: ([]phrase.AstNode) (len=6) {
                    (*lexer.Token)(Var 160 3),
                    (*lexer.Token)(Whitespace 163 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) TypeDeclaration,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) QualifiedName,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*phrase.Phrase)({
                              Type: (phrase.PhraseType) NamespaceName,
                              Children: ([]phrase.AstNode) (len=1) {
                                (*lexer.Token)(Name 164 6)
                              }
                            })
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Whitespace 170 1),
                    (*phrase.Phrase)({
                      Type: (phrase.PhraseType) PropertyElementList,
                      Children: ([]phrase.AstNode) (len=1) {
                        (*phrase.Phrase)({
                          Type: (phrase.PhraseType) PropertyElement,
                          Children: ([]phrase.AstNode) (len=1) {
                            (*lexer.Token)(VariableName 171 2)
                          }
                        })
                      }
                    }),
                    (*lexer.Token)(Semicolon 173 1)
                  }
                })
              }
            }),
            (*lexer.Token)(Whitespace 174 2),
            (*lexer.Token)(CloseBrace 176 1)
          }
        })
      }
    }),
    (*lexer.Token)(Whitespace 177 2)
  }
})
